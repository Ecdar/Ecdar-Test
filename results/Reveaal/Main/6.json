[{
  "time": 450.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "consistency: (Administration || Researcher)",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 447.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "refinement: Imp <= Imp",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 450.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "consistency: (A || Imp)",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 50.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "refinement: Imp <= Q",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 518.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/conjun.xml",
    "query": "(consistency: P7) implies (refinement: P7 <= P7)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 451.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "consistency: P7",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 67.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "refinement: P7 <= P7",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 523.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/DelayAdd",
    "query": "(consistency: A1) implies (refinement: A1 <= A1)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 448.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "consistency: A1",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 75.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "refinement: A1 <= A1",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 31.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "refinement: AA <= AA",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 531.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/conjun.xml",
    "query": "(consistency: P1) implies (refinement: P1 <= P1)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 455.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "consistency: P1",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 76.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "refinement: P1 <= P1",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 85.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "consistency: (Administration || Machine || Researcher)",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 540.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/conjun.xml",
    "query": "(consistency: P9) implies (refinement: P9 <= P9)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 451.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "consistency: P9",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 89.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "refinement: P9 <= P9",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 97.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "consistency: Administration",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 36.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "refinement: (A || G) <= (A || Q)",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 55.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "consistency: (HalfAdm1 && HalfAdm2)",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 28.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "refinement: (A || G) <= (A || G)",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 85.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/DelayAdd",
    "query": "(consistency: A2) implies (refinement: A2 <= A2)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 46.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "consistency: A2",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 39.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "refinement: A2 <= A2",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 66.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "consistency: Machine",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 59.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "consistency: Adm2",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 128.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/conjun.xml",
    "query": "(consistency: P8) implies (refinement: P8 <= P8)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 56.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "consistency: P8",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 72.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "refinement: P8 <= P8",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 46.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "consistency: Researcher",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 69.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Administration <= Administration",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 26.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "refinement: Q <= G",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 162.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/conjun.xml",
    "query": "(consistency: (P0 && P1)) implies (refinement: (P0 && P1) <= (P0 && P1))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 66.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "consistency: (P0 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 96.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "refinement: (P0 && P1) <= (P0 && P1)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 91.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/DelayAdd",
    "query": "(consistency: (A1 || A2)) implies (refinement: (A1 || A2) <= (A1 || A2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 47.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "consistency: (A1 || A2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 44.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "refinement: (A1 || A2) <= (A1 || A2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 64.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "consistency: HalfAdm1",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 23.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "refinement: Q <= Q",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 22.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "refinement: Imp <= G",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 77.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "consistency: Spec",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 201.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/conjun.xml",
    "query": "(consistency: (P7 && P8 && P9)) implies (refinement: (P7 && P8 && P9) <= (P7 && P8 && P9))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 94.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "consistency: (P7 && P8 && P9)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 107.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "refinement: (P7 && P8 && P9) <= (P7 && P8 && P9)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 22.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "refinement: A <= A",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 62.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "consistency: HalfAdm2",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 16.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "refinement: G <= G",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 92.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/DelayAdd",
    "query": "(consistency: B) implies (refinement: B <= B)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 52.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "consistency: B",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 40.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "refinement: B <= B",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 17.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "refinement: G <= Q",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 67.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "consistency: Machine3",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 44.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "consistency: Test2",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 170.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/conjun.xml",
    "query": "(consistency: (P7 && P8)) implies (refinement: (P7 && P8) <= (P7 && P8))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 66.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "consistency: (P7 && P8)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 104.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "refinement: (P7 && P8) <= (P7 && P8)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 17.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "consistency: Imp",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 127.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/conjun.xml",
    "query": "(consistency: P2) implies (refinement: P2 <= P2)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 62.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "consistency: P2",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 65.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "refinement: P2 <= P2",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 30.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "consistency: AA",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 37.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "consistency: Test3",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 69.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Adm2 <= HalfAdm2",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 43.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "consistency: ((HalfAdm1 && HalfAdm2) || Researcher)",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 49.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/DelayAdd",
    "query": "(consistency: D1) implies (refinement: D1 <= D1)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 25.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "consistency: D1",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 24.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "refinement: D1 <= D1",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 76.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/DelayAdd",
    "query": "(consistency: C1) implies (refinement: C1 <= C1)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 29.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "consistency: C1",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 47.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "refinement: C1 <= C1",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 20.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "consistency: (A || G)",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 15.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "consistency: A",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 33.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "consistency: Test4",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 20.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "consistency: G",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 45.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "consistency: ((HalfAdm1 && HalfAdm2) || Machine || Researcher)",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 169.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/conjun.xml",
    "query": "(consistency: P10) implies (refinement: P10 <= P10)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 59.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "consistency: P10",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 110.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "refinement: P10 <= P10",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 52.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/DelayAdd",
    "query": "(consistency: D2) implies (refinement: D2 <= D2)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 22.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "consistency: D2",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 30.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "refinement: D2 <= D2",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 51.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/DelayAdd",
    "query": "(consistency: C2) implies (refinement: C2 <= C2)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 25.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "consistency: C2",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 26.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "refinement: C2 <= C2",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 15.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "consistency: Q",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 53.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "consistency: Test5",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 36.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "consistency: Test1",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 94.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Adm2 <= (HalfAdm1 && HalfAdm2)",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 44.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Machine3 <= Machine",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 74.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: Test10) implies (refinement: Test10 <= Test10)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 49.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: Test10",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 25.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: Test10 <= Test10",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 45.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Machine3 <= Machine3",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 55.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Adm2 <= HalfAdm1",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 123.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/conjun.xml",
    "query": "(consistency: P0) implies (refinement: P0 <= P0)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 64.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "consistency: P0",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 59.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "refinement: P0 <= P0",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 54.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: (Test10 && Test9)) implies (refinement: (Test10 && Test9) <= (Test10 && Test9))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 28.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: (Test10 && Test9)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 26.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: (Test10 && Test9) <= (Test10 && Test9)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 49.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: HalfAdm1 <= HalfAdm1",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 162.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/conjun.xml",
    "query": "(consistency: P11) implies (refinement: P11 <= P11)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 74.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "consistency: P11",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 88.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "refinement: P11 <= P11",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 63.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Adm2 <= Adm2",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 35.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Machine <= Machine",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 44.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: HalfAdm2 <= HalfAdm2",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 163.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: (Administration || Researcher) <= (Administration || Researcher)",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 66.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: Test11) implies (refinement: Test11 <= Test11)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 25.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: Test11",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 41.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: Test11 <= Test11",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 53.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Researcher <= Researcher",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 68.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: Test6) implies (refinement: Test6 <= Test6)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 38.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: Test6",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 30.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: Test6 <= Test6",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 1161.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Researcher <= ((Spec \\\\ Machine) \\\\ Adm2)",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 39.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Spec <= Spec",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 61.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: Test7) implies (refinement: Test7 <= Test7)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 28.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: Test7",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 33.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: Test7 <= Test7",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 52.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: Test9) implies (refinement: Test9 <= Test9)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 27.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: Test9",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 25.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: Test9 <= Test9",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 434.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Researcher <= ((Spec \\\\ (Adm2 && HalfAdm1 && HalfAdm2)) \\\\ Machine)",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 856.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: (Administration || Machine || Researcher) <= Spec",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 798.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Researcher <= ((Spec \\\\ Machine) \\\\ (Adm2 && HalfAdm1 && HalfAdm2))",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 11033.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Researcher <= ((Spec \\\\ Machine) \\\\ (Adm2 && HalfAdm2))",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 17604.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Researcher <= ((Spec \\\\ Machine) \\\\ (Adm2 && HalfAdm1))",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 19550.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Machine <= ((Spec \\\\ (Adm2 && HalfAdm2)) \\\\ Researcher)",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 22632.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Machine <= ((Spec \\\\ Researcher) \\\\ Adm2)",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 26375.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Adm2 <= ((Spec \\\\ Machine) \\\\ Researcher)",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 27218.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Machine <= ((Spec \\\\ Adm2) \\\\ Researcher)",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 16714.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Researcher <= ((Spec \\\\ Machine) \\\\ (HalfAdm1 && HalfAdm2))",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 560.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: (HalfAdm1 && HalfAdm2) <= ((Spec \\\\ Machine) \\\\ Researcher)",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 63.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: (HalfAdm1 && HalfAdm2) <= ((Spec \\\\ Researcher) \\\\ Machine)",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": "io.grpc.StatusRuntimeException: DEADLINE_EXCEEDED: deadline exceeded after 29.999650860s. [closed=[], open=[[remote_addr=127.0.0.1/127.0.0.1:7002]]]",
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Machine <= ((Spec \\\\ (Adm2 && HalfAdm1 && HalfAdm2)) \\\\ Researcher)",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 15569.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Researcher <= ((Spec \\\\ Adm2) \\\\ Machine)",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 3188.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Researcher <= ((Spec \\\\ (Adm2 && HalfAdm1)) \\\\ Machine)",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 360.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Researcher <= ((Spec \\\\ (Adm2 && HalfAdm2)) \\\\ Machine)",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": "io.grpc.StatusRuntimeException: DEADLINE_EXCEEDED: deadline exceeded after 29.999704569s. [closed=[], open=[[remote_addr=127.0.0.1/127.0.0.1:7004]]]",
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Machine <= ((Spec \\\\ (Adm2 && HalfAdm1)) \\\\ Researcher)",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 86.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Machine <= Machine3",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": "io.grpc.StatusRuntimeException: DEADLINE_EXCEEDED: deadline exceeded after 29.999670207s. [closed=[], open=[[remote_addr=127.0.0.1/127.0.0.1:7005]]]",
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Machine <= ((Spec \\\\ Researcher) \\\\ (Adm2 && HalfAdm1 && HalfAdm2))",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 24640.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Machine <= ((Spec \\\\ Researcher) \\\\ (HalfAdm1 && HalfAdm2))",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 29242.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Machine <= ((Spec \\\\ (HalfAdm1 && HalfAdm2)) \\\\ Researcher)",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": "io.grpc.StatusRuntimeException: DEADLINE_EXCEEDED: deadline exceeded after 29.999719655s. [closed=[], open=[[remote_addr=127.0.0.1/127.0.0.1:7000]]]",
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Adm2 <= ((Spec \\\\ Researcher) \\\\ Machine)",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 15173.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Researcher <= ((Spec \\\\ (HalfAdm1 && HalfAdm2)) \\\\ Machine)",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 18203.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Machine <= ((Spec \\\\ Researcher) \\\\ (Adm2 && HalfAdm1))",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 19343.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Machine <= ((Spec \\\\ Researcher) \\\\ (Adm2 && HalfAdm2))",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}]