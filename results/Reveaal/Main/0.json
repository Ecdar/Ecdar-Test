[{
  "time": 796.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: Test11) implies (refinement: Test11 <= Test11)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 742.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: Test11",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 54.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: Test11 <= Test11",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 851.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: (Test4 && Test5)) implies (refinement: (Test4 && Test5) <= (Test4 && Test5))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 752.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: (Test4 && Test5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 99.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: (Test4 && Test5) <= (Test4 && Test5)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 87.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/DelayAdd",
    "query": "(consistency: A1) implies (refinement: A1 <= A1)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 45.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "consistency: A1",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 42.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "refinement: A1 <= A1",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 130.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: (Test4 && Test5)) implies (refinement: (Test3 && Test4) <= (Test4 && Test5))",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 54.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: (Test4 && Test5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 76.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: (Test3 && Test4) <= (Test4 && Test5)",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 100.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/DelayAdd",
    "query": "(consistency: A2) implies (refinement: A2 <= A2)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 48.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "consistency: A2",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 52.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "refinement: A2 <= A2",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 1039.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: (T1 || T2) <= T3",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 87.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/DelayAdd",
    "query": "(consistency: (A1 || A2)) implies (refinement: (A1 || A2) <= (A1 || A2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 41.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "consistency: (A1 || A2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 46.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "refinement: (A1 || A2) <= (A1 || A2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 97.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: (Test4 && Test5)) implies (refinement: (Test4 && Test5) <= Test4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 47.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: (Test4 && Test5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 50.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: (Test4 && Test5) <= Test4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 72.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/DelayAdd",
    "query": "(consistency: B) implies (refinement: B <= B)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 36.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "consistency: B",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 36.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "refinement: B <= B",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 93.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: (Test4 && Test5)) implies (refinement: (Test4 && Test5) <= Test5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 43.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: (Test4 && Test5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 50.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: (Test4 && Test5) <= Test5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 1188.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P0 && P7)) implies (refinement: (P0 && P7) <= (P0 && P7))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 901.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P0 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 287.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P0 && P7) <= (P0 && P7)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 77.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/DelayAdd",
    "query": "(consistency: C1) implies (refinement: C1 <= C1)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 37.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "consistency: C1",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 40.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "refinement: C1 <= C1",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 1234.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L4 && L5)) implies (refinement: (L4 && L5) <= (L4 && L5))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 943.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L4 && L5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 291.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L4 && L5) <= (L4 && L5)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 1243.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && L5)) implies (refinement: (K6 && L5) <= K6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 940.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && L5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 303.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && L5) <= K6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 85.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/DelayAdd",
    "query": "(consistency: C2) implies (refinement: C2 <= C2)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 48.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "consistency: C2",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 37.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "refinement: C2 <= C2",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (Z2 && Z3)) implies (refinement: (Z2 && Z3) <= Z3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 982.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (Z2 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (Z2 && Z3) <= Z3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 81.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/DelayAdd",
    "query": "(consistency: D1) implies (refinement: D1 <= D1)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 41.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "consistency: D1",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 40.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "refinement: D1 <= D1",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 358.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: (T1 || T2) <= (T1 || T2)",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 1411.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L6 && Z4)) implies (refinement: (L6 && Z4) <= (L6 && Z4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 942.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L6 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 469.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L6 && Z4) <= (L6 && Z4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 77.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/DelayAdd",
    "query": "(consistency: D2) implies (refinement: D2 <= D2)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 38.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "consistency: D2",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 39.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "refinement: D2 <= D2",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 204.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/conjun.xml",
    "query": "(consistency: P0) implies (refinement: P0 <= P0)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 106.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "consistency: P0",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 98.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "refinement: P0 <= P0",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 286.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: (F1 || F2) <= F3",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 518.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P0 && P7)) implies (refinement: (P0 && P7) <= P7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 259.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P0 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 259.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P0 && P7) <= P7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 568.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && K3)) implies (refinement: (K1 && K3) <= (K1 && K3))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 306.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && K3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 262.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && K3) <= (K1 && K3)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 543.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L4 && L5)) implies (refinement: (L4 && L5) <= L4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 275.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L4 && L5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 268.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L4 && L5) <= L4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 597.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && L5)) implies (refinement: (K1 && L5) <= (K1 && L5))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 272.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && L5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 325.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && L5) <= (K1 && L5)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 177.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/conjun.xml",
    "query": "(consistency: P1) implies (refinement: P1 <= P1)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 85.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "consistency: P1",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 92.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "refinement: P1 <= P1",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (Z2 && Z3)) implies (refinement: (Z2 && Z3) <= Z2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 293.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (Z2 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (Z2 && Z3) <= Z2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 579.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L6 && Z4)) implies (refinement: (L6 && Z4) <= L6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 313.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L6 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 266.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L6 && Z4) <= L6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 197.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/conjun.xml",
    "query": "(consistency: (P0 && P1)) implies (refinement: (P0 && P1) <= (P0 && P1))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 87.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "consistency: (P0 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 110.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "refinement: (P0 && P1) <= (P0 && P1)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 364.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: (F1 || F2) <= (F1 || F2)",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 35.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/extrapolation_test.xml",
    "query": "refinement: Inf <= Inf",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 47.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/misc_test.xml",
    "query": "refinement: GuardParan <= GuardParan",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 512.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P0 && P7)) implies (refinement: (P0 && P7) <= P0)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 250.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P0 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 262.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P0 && P7) <= P0",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 194.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/conjun.xml",
    "query": "(consistency: P2) implies (refinement: P2 <= P2)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 96.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "consistency: P2",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 98.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "refinement: P2 <= P2",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 149.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "refinement: G1 <= G1",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 561.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && K3)) implies (refinement: (K1 && K3) <= K1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 261.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && K3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 300.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && K3) <= K1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 542.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L4 && L5)) implies (refinement: (L4 && L5) <= L5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 269.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L4 && L5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 273.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L4 && L5) <= L5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 543.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && L5)) implies (refinement: (K1 && L5) <= L5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 263.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && L5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 280.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && L5) <= L5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 140.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "refinement: G2 <= G2",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 208.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/conjun.xml",
    "query": "(consistency: P7) implies (refinement: P7 <= P7)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 112.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "consistency: P7",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 96.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "refinement: P7 <= P7",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (Z2 && Z3)) implies (refinement: (Z2 && Z3) <= Z4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 299.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (Z2 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (Z2 && Z3) <= Z4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 532.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L6 && Z4)) implies (refinement: (L6 && Z4) <= Z4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 264.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L6 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 268.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L6 && Z4) <= Z4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 151.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "refinement: G6 <= G6",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 218.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/conjun.xml",
    "query": "(consistency: P8) implies (refinement: P8 <= P8)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 119.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "consistency: P8",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 99.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "refinement: P8 <= P8",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 137.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "refinement: G8 <= G8",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 521.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P0 && P7)) implies (refinement: (P0 && P7) <= P1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 256.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P0 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 265.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P0 && P7) <= P1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 135.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "refinement: G13 <= G13",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 522.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && L4)) implies (refinement: (K5 && L4) <= (K5 && L4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 264.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && L4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 258.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && L4) <= (K5 && L4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 550.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && K3)) implies (refinement: (K1 && K3) <= K3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 290.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && K3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 260.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && K3) <= K3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 198.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/conjun.xml",
    "query": "(consistency: (P7 && P8)) implies (refinement: (P7 && P8) <= (P7 && P8))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 89.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "consistency: (P7 && P8)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 109.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "refinement: (P7 && P8) <= (P7 && P8)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 525.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && L5)) implies (refinement: (K1 && L5) <= K1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 262.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && L5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 263.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && L5) <= K1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 138.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "refinement: G15 <= G15",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 172.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/conjun.xml",
    "query": "(consistency: P9) implies (refinement: P9 <= P9)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 83.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "consistency: P9",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 89.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "refinement: P9 <= P9",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 551.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P1 && Z4)) implies (refinement: (P1 && Z4) <= (P1 && Z4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 295.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P1 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 256.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P1 && Z4) <= (P1 && Z4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 598.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P6 && Z2)) implies (refinement: (P6 && Z2) <= (P6 && Z2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 319.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P6 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 279.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P6 && Z2) <= (P6 && Z2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 141.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "refinement: G17 <= G17",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 164.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/conjun.xml",
    "query": "(consistency: P10) implies (refinement: P10 <= P10)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 82.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "consistency: P10",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 82.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "refinement: P10 <= P10",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 134.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "refinement: G18 <= G18",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 524.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && L4)) implies (refinement: (K5 && L4) <= L4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 255.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && L4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 269.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && L4) <= L4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 154.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "refinement: G20 <= G20",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 567.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && P7)) implies (refinement: (K1 && P7) <= (K1 && P7))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 252.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 315.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && P7) <= (K1 && P7)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 251.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/conjun.xml",
    "query": "(consistency: P11) implies (refinement: P11 <= P11)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 81.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "consistency: P11",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 170.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "refinement: P11 <= P11",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 782.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L6 && P7)) implies (refinement: (L6 && P7) <= (L6 && P7))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 375.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L6 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 407.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L6 && P7) <= (L6 && P7)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 145.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "refinement: G21 <= G21",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 665.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && L5)) implies (refinement: (K3 && L5) <= (K3 && L5))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 286.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && L5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 379.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && L5) <= (K3 && L5)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 162.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/conjun.xml",
    "query": "(consistency: P12) implies (refinement: P12 <= P12)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 79.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "consistency: P12",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 83.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "refinement: P12 <= P12",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 612.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P1 && Z4)) implies (refinement: (P1 && Z4) <= P1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 330.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P1 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 282.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P1 && Z4) <= P1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 635.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P6 && Z2)) implies (refinement: (P6 && Z2) <= P7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 341.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P6 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 294.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P6 && Z2) <= P7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 178.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/conjun.xml",
    "query": "(consistency: (P11 && P12)) implies (refinement: (P11 && P12) <= (P11 && P12))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 88.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "consistency: (P11 && P12)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 90.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "refinement: (P11 && P12) <= (P11 && P12)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 289.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: (T0 || T2) <= (T0 || T2)",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 596.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && L4)) implies (refinement: (K5 && L4) <= K5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 308.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && L4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 288.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && L4) <= K5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 217.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/conjun.xml",
    "query": "(consistency: P13) implies (refinement: P13 <= P13)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 121.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "consistency: P13",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 96.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/conjun.xml",
      "query": "refinement: P13 <= P13",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 598.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && P7)) implies (refinement: (K1 && P7) <= P7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 341.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 257.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && P7) <= P7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 583.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L6 && P7)) implies (refinement: (L6 && P7) <= P7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 277.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L6 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 306.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L6 && P7) <= P7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 293.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: (T0 || T1) <= (T0 || T1)",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 596.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && L5)) implies (refinement: (K3 && L5) <= L5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 291.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && L5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 305.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && L5) <= L5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 91.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: (Machine || Researcher) <= (Machine || Researcher)",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 592.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P1 && Z4)) implies (refinement: (P1 && Z4) <= Z4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 262.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P1 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 330.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P1 && Z4) <= Z4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 103.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: (Administration || Machine) <= (Administration || Machine)",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 35.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "refinement: (A || Q) <= (A || G)",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 656.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P6 && Z2)) implies (refinement: (P6 && Z2) <= Z2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 268.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P6 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 388.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P6 && Z2) <= Z2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 29.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "refinement: (A || Q) <= (A || Q)",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 562.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && L4)) implies (refinement: (K6 && L4) <= (K6 && L4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 279.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && L4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 283.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && L4) <= (K6 && L4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 608.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: Q1) implies (refinement: Q1 <= Q1)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 356.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: Q1",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 252.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: Q1 <= Q1",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 264.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: (Adm2 || Machine) <= (Adm2 || Machine)",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 672.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && P7)) implies (refinement: (K1 && P7) <= K1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 418.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 254.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && P7) <= K1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 582.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && L5)) implies (refinement: (K3 && L5) <= K3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 322.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && L5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 260.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && L5) <= K3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 702.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L6 && P7)) implies (refinement: (L6 && P7) <= L6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 380.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L6 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 322.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L6 && P7) <= L6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 536.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && Z4)) implies (refinement: (K4 && Z4) <= (K4 && Z4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 276.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 260.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && Z4) <= (K4 && Z4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 531.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P6 && Z2)) implies (refinement: (P6 && Z2) <= P6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 253.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P6 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 278.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P6 && Z2) <= P6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 373.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: (Adm2 || Researcher) <= (Adm2 || Researcher)",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 17.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "consistency: A",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 19.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "consistency: G",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 555.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && L4)) implies (refinement: (K6 && L4) <= L4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 257.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && L4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 298.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && L4) <= L4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 18.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "consistency: Q",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 18.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "consistency: Imp",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 17.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "consistency: AA",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 517.0,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: Q2) implies (refinement: Q2 <= Q2)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 262.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: Q2",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 255.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: Q2 <= Q2",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 20.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "consistency: (A || G)",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && Z3)) implies (refinement: (K1 && Z3) <= (K1 && Z3))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 251.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && Z3) <= (K1 && Z3)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 512.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && Z4)) implies (refinement: (K4 && Z4) <= K4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 255.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 257.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && Z4) <= K4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 522.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P1 && P7)) implies (refinement: (P1 && P7) <= (P1 && P7))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 252.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P1 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 270.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P1 && P7) <= (P1 && P7)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 605.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L5 && P7)) implies (refinement: (L5 && P7) <= (L5 && P7))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 307.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L5 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 298.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L5 && P7) <= (L5 && P7)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 259.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G17 && G6)) implies (refinement: (G17 && G6) <= (G17 && G6))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 122.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G17 && G6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 137.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G17 && G6) <= (G17 && G6)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 282.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: K5 <= K5",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 569.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (Z2 && Z4)) implies (refinement: (Z2 && Z4) <= (Z2 && Z4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 308.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (Z2 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 261.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (Z2 && Z4) <= (Z2 && Z4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 555.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && L4)) implies (refinement: (K6 && L4) <= K6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 276.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && L4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 279.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && L4) <= K6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 261.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G17 && G6)) implies (refinement: (G17 && G6) <= G6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 129.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G17 && G6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 132.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G17 && G6) <= G6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 268.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: K6 <= K6",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && Z3)) implies (refinement: (K1 && Z3) <= Z3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 255.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && Z3) <= Z3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 519.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P1 && P7)) implies (refinement: (P1 && P7) <= P7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 260.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P1 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 259.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P1 && P7) <= P7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 523.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L5 && P7)) implies (refinement: (L5 && P7) <= P7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 255.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L5 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 268.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L5 && P7) <= P7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 260.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G17 && G6)) implies (refinement: (G17 && G6) <= G17)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 129.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G17 && G6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 131.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G17 && G6) <= G17",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 260.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: P0 <= P0",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 649.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && Z4)) implies (refinement: (K4 && Z4) <= Z4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 324.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 325.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && Z4) <= Z4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 587.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (Z2 && Z4)) implies (refinement: (Z2 && Z4) <= Z2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 294.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (Z2 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 293.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (Z2 && Z4) <= Z2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 546.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && L4)) implies (refinement: (K1 && L4) <= (K1 && L4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 274.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && L4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 272.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && L4) <= (K1 && L4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G18 && G6)) implies (refinement: (G18 && G6) <= (G18 && G6))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 127.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G18 && G6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G18 && G6) <= (G18 && G6)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 310.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: P0 <= P1",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && Z3)) implies (refinement: (K1 && Z3) <= K1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 328.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && Z3) <= K1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 513.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P1 && P7)) implies (refinement: (P1 && P7) <= P1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 256.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P1 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 257.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P1 && P7) <= P1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G18 && G6)) implies (refinement: (G18 && G6) <= G6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 126.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G18 && G6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G18 && G6) <= G6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 608.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L5 && P7)) implies (refinement: (L5 && P7) <= L5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 281.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L5 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 327.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L5 && P7) <= L5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 306.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: P1 <= P1",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 702.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L6 && P0)) implies (refinement: (L6 && P0) <= (L6 && P0))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 376.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L6 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 326.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L6 && P0) <= (L6 && P0)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 718.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (Z2 && Z4)) implies (refinement: (Z2 && Z4) <= Z4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 349.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (Z2 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 369.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (Z2 && Z4) <= Z4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G18 && G6)) implies (refinement: (G18 && G6) <= G18)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 206.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G18 && G6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G18 && G6) <= G18",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 616.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && L4)) implies (refinement: (K1 && L4) <= L4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 344.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && L4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 272.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && L4) <= L4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && Z3)) implies (refinement: (K1 && Z3) <= Z4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 252.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && Z3) <= Z4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 522.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && P7)) implies (refinement: (K4 && P7) <= (K4 && P7))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 260.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 262.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && P7) <= (K4 && P7)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 368.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: P2 <= P2",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 316.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G15 && G6)) implies (refinement: (G15 && G6) <= (G15 && G6))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 176.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G15 && G6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 140.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G15 && G6) <= (G15 && G6)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L5 && Z3)) implies (refinement: (L5 && Z3) <= (L5 && Z3))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 354.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L5 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L5 && Z3) <= (L5 && Z3)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 342.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: P3 <= P3",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 689.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P0 && Z2)) implies (refinement: (P0 && Z2) <= (P0 && Z2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 386.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P0 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 303.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P0 && Z2) <= (P0 && Z2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 375.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G15 && G6)) implies (refinement: (G15 && G6) <= G6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 129.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G15 && G6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 246.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G15 && G6) <= G6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 697.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && L4)) implies (refinement: (K1 && L4) <= K1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 271.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && L4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 426.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && L4) <= K1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 887.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L6 && P0)) implies (refinement: (L6 && P0) <= P0)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 438.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L6 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 449.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L6 && P0) <= P0",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 750.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && P6)) implies (refinement: (K1 && P6) <= (K1 && P6))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 447.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 303.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && P6) <= (K1 && P6)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 399.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: P4 <= P4",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 963.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && P7)) implies (refinement: (K4 && P7) <= P7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 321.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 642.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && P7) <= P7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 516.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G15 && G6)) implies (refinement: (G15 && G6) <= G15)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 267.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G15 && G6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 249.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G15 && G6) <= G15",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 511.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: P4 <= P5",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L5 && Z3)) implies (refinement: (L5 && Z3) <= L5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 479.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L5 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L5 && Z3) <= L5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 624.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && P6)) implies (refinement: (K1 && P6) <= P7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 270.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 354.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && P6) <= P7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 896.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && L4)) implies (refinement: (K3 && L4) <= (K3 && L4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 601.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && L4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 295.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && L4) <= (K3 && L4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 926.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P0 && Z2)) implies (refinement: (P0 && Z2) <= P0)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 405.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P0 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 521.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P0 && Z2) <= P0",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 959.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L6 && P0)) implies (refinement: (L6 && P0) <= L6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 558.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L6 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 401.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L6 && P0) <= L6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G17 && G18)) implies (refinement: (G17 && G18) <= (G17 && G18))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 242.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G17 && G18)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G17 && G18) <= (G17 && G18)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 679.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: P5 <= P5",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 1063.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && P7)) implies (refinement: (K4 && P7) <= K4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 461.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 602.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && P7) <= K4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 869.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && P6)) implies (refinement: (K1 && P6) <= P6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 596.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 273.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && P6) <= P6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 751.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && L4)) implies (refinement: (K3 && L4) <= L4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 378.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && L4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 373.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && L4) <= L4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G17 && G18)) implies (refinement: (G17 && G18) <= G17)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 376.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G17 && G18)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G17 && G18) <= G17",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L5 && Z3)) implies (refinement: (L5 && Z3) <= Z3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 462.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L5 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L5 && Z3) <= Z3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 844.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P0 && Z2)) implies (refinement: (P0 && Z2) <= P1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 444.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P0 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 400.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P0 && Z2) <= P1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 651.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: P6 <= P7",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 1194.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L6 && P0)) implies (refinement: (L6 && P0) <= P1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 534.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L6 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 660.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L6 && P0) <= P1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 652.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && P6)) implies (refinement: (K1 && P6) <= K1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 383.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 269.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && P6) <= K1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P6 && Z3)) implies (refinement: (P6 && Z3) <= (P6 && Z3))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 473.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P6 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P6 && Z3) <= (P6 && Z3)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 784.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && L4)) implies (refinement: (K3 && L4) <= K3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 408.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && L4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 376.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && L4) <= K3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G17 && G18)) implies (refinement: (G17 && G18) <= G18)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 404.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G17 && G18)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G17 && G18) <= G18",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 829.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: P6 <= P6",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 604.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G15 && G17)) implies (refinement: (G15 && G17) <= (G15 && G17))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 320.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G15 && G17)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 284.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G15 && G17) <= (G15 && G17)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L5 && Z3)) implies (refinement: (L5 && Z3) <= Z4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 848.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L5 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L5 && Z3) <= Z4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P6 && Z3)) implies (refinement: (P6 && Z3) <= P7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 330.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P6 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P6 && Z3) <= P7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 1076.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && P0)) implies (refinement: (K4 && P0) <= (K4 && P0))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 653.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 423.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && P0) <= (K4 && P0)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 877.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L4 && P7)) implies (refinement: (L4 && P7) <= (L4 && P7))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 537.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L4 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 340.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L4 && P7) <= (L4 && P7)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 314.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G15 && G17)) implies (refinement: (G15 && G17) <= G15)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 150.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G15 && G17)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 164.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G15 && G17) <= G15",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 1678.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P0 && Z2)) implies (refinement: (P0 && Z2) <= Z2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 927.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P0 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 751.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P0 && Z2) <= Z2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 697.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: P7 <= P7",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 1320.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && Z4)) implies (refinement: (K1 && Z4) <= (K1 && Z4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 629.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 691.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && Z4) <= (K1 && Z4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 420.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L4 && P7)) implies (refinement: (L4 && P7) <= P7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 207.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L4 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 213.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L4 && P7) <= P7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 680.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L5 && P6)) implies (refinement: (L5 && P6) <= (L5 && P6))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 432.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L5 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 248.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L5 && P6) <= (L5 && P6)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 414.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G15 && G17)) implies (refinement: (G15 && G17) <= G17)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 203.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G15 && G17)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 211.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G15 && G17) <= G17",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 697.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && P0)) implies (refinement: (K4 && P0) <= P0)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 394.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 303.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && P0) <= P0",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P6 && Z3)) implies (refinement: (P6 && Z3) <= P6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 495.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P6 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P6 && Z3) <= P6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 505.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: L1 <= L1",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G1 && G2)) implies (refinement: (G1 && G2) <= (G1 && G2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 155.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G1 && G2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G1 && G2) <= (G1 && G2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 600.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && Z4)) implies (refinement: (K1 && Z4) <= K1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 303.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 297.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && Z4) <= K1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 779.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L6 && Z2)) implies (refinement: (L6 && Z2) <= (L6 && Z2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 516.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L6 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 263.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L6 && Z2) <= (L6 && Z2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 542.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L4 && P7)) implies (refinement: (L4 && P7) <= L4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 205.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L4 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 337.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L4 && P7) <= L4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 383.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: L2 <= L2",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G1 && G2)) implies (refinement: (G1 && G2) <= G1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 193.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G1 && G2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G1 && G2) <= G1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 700.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L5 && P6)) implies (refinement: (L5 && P6) <= P7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 408.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L5 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 292.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L5 && P6) <= P7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P6 && Z3)) implies (refinement: (P6 && Z3) <= Z4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 331.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P6 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P6 && Z3) <= Z4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 489.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && Z4)) implies (refinement: (K1 && Z4) <= Z4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 225.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 264.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && Z4) <= Z4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 682.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && P0)) implies (refinement: (K4 && P0) <= P1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 412.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 270.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && P0) <= P1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 257.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: L3 <= L3",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 489.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L6 && Z2)) implies (refinement: (L6 && Z2) <= L6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 231.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L6 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 258.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L6 && Z2) <= L6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L4 && Z3)) implies (refinement: (L4 && Z3) <= (L4 && Z3))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 219.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L4 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L4 && Z3) <= (L4 && Z3)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G1 && G2)) implies (refinement: (G1 && G2) <= G2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 140.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G1 && G2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G1 && G2) <= G2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 215.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: L4 <= L4",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P6 && Z3)) implies (refinement: (P6 && Z3) <= Z3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 193.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P6 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P6 && Z3) <= Z3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 588.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L5 && P6)) implies (refinement: (L5 && P6) <= L5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 230.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L5 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 358.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L5 && P6) <= L5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 464.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && P0)) implies (refinement: (K4 && P0) <= K4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 211.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 253.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && P0) <= K4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 530.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L6 && Z2)) implies (refinement: (L6 && Z2) <= Z2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 193.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L6 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 337.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L6 && Z2) <= Z2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G2 && G21)) implies (refinement: (G2 && G21) <= (G2 && G21))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 170.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G2 && G21)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G2 && G21) <= (G2 && G21)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 421.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: L5 <= L5",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 709.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && P0)) implies (refinement: (K1 && P0) <= (K1 && P0))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 204.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 505.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && P0) <= (K1 && P0)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L4 && Z3)) implies (refinement: (L4 && Z3) <= L4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 231.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L4 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L4 && Z3) <= L4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G2 && G21)) implies (refinement: (G2 && G21) <= G21)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 228.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G2 && G21)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G2 && G21) <= G21",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P0 && Z3)) implies (refinement: (P0 && Z3) <= (P0 && Z3))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 329.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P0 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P0 && Z3) <= (P0 && Z3)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 356.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: L6 <= L6",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 682.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L5 && P6)) implies (refinement: (L5 && P6) <= P6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 220.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L5 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 462.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L5 && P6) <= P6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 698.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L6 && P1)) implies (refinement: (L6 && P1) <= (L6 && P1))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 241.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L6 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 457.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L6 && P1) <= (L6 && P1)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G2 && G21)) implies (refinement: (G2 && G21) <= G2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 126.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G2 && G21)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G2 && G21) <= G2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 844.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P1 && Z2)) implies (refinement: (P1 && Z2) <= (P1 && Z2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 334.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P1 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 510.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P1 && Z2) <= (P1 && Z2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 420.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: L7 <= L7",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 779.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && P0)) implies (refinement: (K1 && P0) <= P0)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 572.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 207.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && P0) <= P0",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P0 && Z3)) implies (refinement: (P0 && Z3) <= Z4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 250.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P0 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P0 && Z3) <= Z4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 291.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G20 && G8)) implies (refinement: (G20 && G8) <= (G20 && G8))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 163.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G20 && G8)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 128.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G20 && G8) <= (G20 && G8)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L4 && Z3)) implies (refinement: (L4 && Z3) <= Z3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 544.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L4 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L4 && Z3) <= Z3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 467.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L6 && P1)) implies (refinement: (L6 && P1) <= L6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 212.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L6 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 255.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L6 && P1) <= L6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 268.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: Z1 <= Z2",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 658.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L5 && Z4)) implies (refinement: (L5 && Z4) <= (L5 && Z4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 373.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L5 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 285.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L5 && Z4) <= (L5 && Z4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 332.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G20 && G8)) implies (refinement: (G20 && G8) <= G8)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 112.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G20 && G8)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 220.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G20 && G8) <= G8",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 282.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: Z1 <= Z1",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 534.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && P0)) implies (refinement: (K1 && P0) <= P1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 297.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 237.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && P0) <= P1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P0 && Z3)) implies (refinement: (P0 && Z3) <= P0)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 269.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P0 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P0 && Z3) <= P0",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 610.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P1 && Z2)) implies (refinement: (P1 && Z2) <= P1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 271.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P1 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 339.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P1 && Z2) <= P1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L4 && Z3)) implies (refinement: (L4 && Z3) <= Z4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 242.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L4 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L4 && Z3) <= Z4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 284.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G20 && G8)) implies (refinement: (G20 && G8) <= G20)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 186.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G20 && G8)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 98.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G20 && G8) <= G20",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 599.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L6 && P1)) implies (refinement: (L6 && P1) <= P1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 292.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L6 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 307.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L6 && P1) <= P1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 556.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L5 && Z4)) implies (refinement: (L5 && Z4) <= L5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 279.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L5 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 277.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L5 && Z4) <= L5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 340.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: Z2 <= Z2",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 293.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G13 && G8)) implies (refinement: (G13 && G8) <= (G13 && G8))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 106.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G13 && G8)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 187.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G13 && G8) <= (G13 && G8)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P0 && Z3)) implies (refinement: (P0 && Z3) <= Z3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 222.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P0 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P0 && Z3) <= Z3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 445.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && P0)) implies (refinement: (K1 && P0) <= K1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 217.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 228.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && P0) <= K1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 549.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P1 && Z2)) implies (refinement: (P1 && Z2) <= Z2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 300.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P1 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 249.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P1 && Z2) <= Z2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 278.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: Z3 <= Z3",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 633.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L4 && P6)) implies (refinement: (L4 && P6) <= (L4 && P6))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 300.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L4 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 333.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L4 && P6) <= (L4 && P6)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 256.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G13 && G8)) implies (refinement: (G13 && G8) <= G13)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 145.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G13 && G8)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 111.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G13 && G8) <= G13",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 530.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && L6)) implies (refinement: (K4 && L6) <= (K4 && L6))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 312.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && L6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 218.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && L6) <= (K4 && L6)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 456.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L5 && Z4)) implies (refinement: (L5 && Z4) <= Z4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 216.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L5 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 240.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L5 && Z4) <= Z4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 402.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && L6)) implies (refinement: (K1 && L6) <= (K1 && L6))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 201.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && L6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 201.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && L6) <= (K1 && L6)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 245.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: Z3 <= Z4",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P0 && Z3)) implies (refinement: (P0 && Z3) <= P1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 218.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P0 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P0 && Z3) <= P1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 317.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G13 && G8)) implies (refinement: (G13 && G8) <= G8)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 161.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G13 && G8)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 156.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G13 && G8) <= G8",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 512.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && Z2)) implies (refinement: (K4 && Z2) <= (K4 && Z2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 240.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 272.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && Z2) <= (K4 && Z2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 282.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: Z4 <= Z4",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 513.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L5 && P0)) implies (refinement: (L5 && P0) <= (L5 && P0))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 300.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L5 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 213.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L5 && P0) <= (L5 && P0)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 626.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L4 && P6)) implies (refinement: (L4 && P6) <= P7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 349.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L4 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 277.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L4 && P6) <= P7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 342.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G13 && G20)) implies (refinement: (G13 && G20) <= (G13 && G20))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 141.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G13 && G20)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 201.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G13 && G20) <= (G13 && G20)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 213.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: Z5 <= Z5",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 581.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && L6)) implies (refinement: (K4 && L6) <= L6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 237.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && L6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 344.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && L6) <= L6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 504.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && L6)) implies (refinement: (K1 && L6) <= L6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 313.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && L6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 191.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && L6) <= L6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L6 && Z3)) implies (refinement: (L6 && Z3) <= (L6 && Z3))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 293.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L6 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L6 && Z3) <= (L6 && Z3)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 218.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G13 && G20)) implies (refinement: (G13 && G20) <= G13)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 102.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G13 && G20)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 116.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G13 && G20) <= G13",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 476.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && Z2)) implies (refinement: (K4 && Z2) <= Z2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 200.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 276.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && Z2) <= Z2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 267.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: Z6 <= Z6",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 477.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L5 && P0)) implies (refinement: (L5 && P0) <= P0)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 267.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L5 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 210.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L5 && P0) <= P0",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 522.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L4 && P6)) implies (refinement: (L4 && P6) <= L4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 214.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L4 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 308.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L4 && P6) <= L4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 286.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G13 && G20)) implies (refinement: (G13 && G20) <= G20)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 171.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G13 && G20)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 115.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G13 && G20) <= G20",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 491.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && L6)) implies (refinement: (K1 && L6) <= K1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 292.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && L6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 199.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && L6) <= K1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 241.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: Z7 <= Z7",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 539.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && L6)) implies (refinement: (K4 && L6) <= K4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 271.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && L6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 268.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && L6) <= K4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L6 && Z3)) implies (refinement: (L6 && Z3) <= L6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 224.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L6 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L6 && Z3) <= L6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 405.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && Z2)) implies (refinement: (K4 && Z2) <= K4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 205.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 200.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && Z2) <= K4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 219.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: T2",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 273.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G1 && G21)) implies (refinement: (G1 && G21) <= (G1 && G21))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 127.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G1 && G21)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 146.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G1 && G21) <= (G1 && G21)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 393.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && P1)) implies (refinement: (K1 && P1) <= (K1 && P1))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 185.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 208.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && P1) <= (K1 && P1)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 496.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L5 && P0)) implies (refinement: (L5 && P0) <= L5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 286.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L5 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 210.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L5 && P0) <= L5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 399.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && P1)) implies (refinement: (K4 && P1) <= (K4 && P1))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 207.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 192.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && P1) <= (K4 && P1)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 254.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G1 && G21)) implies (refinement: (G1 && G21) <= G1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 102.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G1 && G21)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 152.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G1 && G21) <= G1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 585.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L4 && P6)) implies (refinement: (L4 && P6) <= P6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 209.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L4 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 376.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L4 && P6) <= P6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C1 && P2)) implies (refinement: (C1 && P2) <= (C1 && P2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 195.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C1 && P2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C1 && P2) <= (C1 && P2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 396.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: T3",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L6 && Z3)) implies (refinement: (L6 && Z3) <= Z3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 227.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L6 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L6 && Z3) <= Z3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 215.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G1 && G21)) implies (refinement: (G1 && G21) <= G21)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 109.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G1 && G21)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 106.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G1 && G21) <= G21",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 489.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && P1)) implies (refinement: (K4 && P1) <= P1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 288.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 201.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && P1) <= P1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 323.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: C1",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 544.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L5 && P0)) implies (refinement: (L5 && P0) <= P1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 218.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L5 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 326.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L5 && P0) <= P1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G15 && G18)) implies (refinement: (G15 && G18) <= (G15 && G18))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 132.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G15 && G18)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G15 && G18) <= (G15 && G18)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 633.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && P1)) implies (refinement: (K1 && P1) <= P1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 410.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 223.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && P1) <= P1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C1 && P2)) implies (refinement: (C1 && P2) <= C1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 233.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C1 && P2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C1 && P2) <= C1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 236.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: C2",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L6 && Z3)) implies (refinement: (L6 && Z3) <= Z4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 257.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L6 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L6 && Z3) <= Z4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 680.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L4 && Z4)) implies (refinement: (L4 && Z4) <= (L4 && Z4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 247.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L4 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 433.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L4 && Z4) <= (L4 && Z4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G15 && G18)) implies (refinement: (G15 && G18) <= G15)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 122.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G15 && G18)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G15 && G18) <= G15",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 205.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: F1",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 471.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && P1)) implies (refinement: (K4 && P1) <= K4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 249.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 222.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && P1) <= K4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 466.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L5 && L6)) implies (refinement: (L5 && L6) <= (L5 && L6))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 269.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L5 && L6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 197.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L5 && L6) <= (L5 && L6)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "(consistency: (G15 && G18)) implies (refinement: (G15 && G18) <= G18)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 94.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "consistency: (G15 && G18)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/ConsTests.xml",
      "query": "refinement: (G15 && G18) <= G18",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 433.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && P1)) implies (refinement: (K1 && P1) <= K1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 227.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 206.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && P1) <= K1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C1 && P2)) implies (refinement: (C1 && P2) <= P2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 242.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C1 && P2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C1 && P2) <= P2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 93.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: (Test3 && Test5)) implies (refinement: (Test3 && Test5) <= (Test3 && Test5))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 55.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: (Test3 && Test5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 38.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: (Test3 && Test5) <= (Test3 && Test5)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 97.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "consistency: G5",
    "testSuite": "NonConsistency",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 63.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: (Test3 && Test5)) implies (refinement: (Test3 && Test4) <= (Test3 && Test5))",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 29.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: (Test3 && Test5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 34.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: (Test3 && Test4) <= (Test3 && Test5)",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 180.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: F2",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P1 && Z3)) implies (refinement: (P1 && Z3) <= (P1 && Z3))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 199.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P1 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P1 && Z3) <= (P1 && Z3)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 64.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: (Test3 && Test5)) implies (refinement: (Test3 && Test5) <= Test3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 28.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: (Test3 && Test5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 36.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: (Test3 && Test5) <= Test3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 94.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "consistency: G6",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 456.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L4 && Z4)) implies (refinement: (L4 && Z4) <= L4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 271.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L4 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 185.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L4 && Z4) <= L4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 73.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: (Test3 && Test5)) implies (refinement: (Test3 && Test5) <= Test5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 37.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: (Test3 && Test5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 36.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: (Test3 && Test5) <= Test5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 110.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "consistency: G7",
    "testSuite": "NonConsistency",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 190.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: F3",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 426.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && K4)) implies (refinement: (K1 && K4) <= (K1 && K4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 191.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && K4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 235.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && K4) <= (K1 && K4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 148.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "consistency: G8",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C1 && P2)) implies (refinement: (C1 && P2) <= C2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 187.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C1 && P2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C1 && P2) <= C2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 515.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L5 && L6)) implies (refinement: (L5 && L6) <= L6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 195.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L5 && L6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 320.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L5 && L6) <= L6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 116.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "consistency: G9",
    "testSuite": "NonConsistency",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 300.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: T4",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 100.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "consistency: G10",
    "testSuite": "NonConsistency",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P1 && Z3)) implies (refinement: (P1 && Z3) <= Z4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 258.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P1 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P1 && Z3) <= Z4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 105.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "consistency: G11",
    "testSuite": "NonConsistency",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 585.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L4 && Z4)) implies (refinement: (L4 && Z4) <= Z4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 326.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L4 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 259.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L4 && Z4) <= Z4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 219.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: T0",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P1 && Z3)) implies (refinement: (P1 && Z3) <= Z3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 359.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P1 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P1 && Z3) <= Z3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 137.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "consistency: G12",
    "testSuite": "NonConsistency",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 562.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && K4)) implies (refinement: (K1 && K4) <= K4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 241.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && K4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 321.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && K4) <= K4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 107.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "consistency: G13",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 206.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: T5",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 595.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C1 && P4)) implies (refinement: (C1 && P4) <= (C1 && P4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 369.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C1 && P4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 226.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C1 && P4) <= (C1 && P4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 606.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L5 && L6)) implies (refinement: (L5 && L6) <= L5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 345.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L5 && L6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 261.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L5 && L6) <= L5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 161.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "consistency: G14",
    "testSuite": "NonConsistency",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 206.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: T6",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && Z3)) implies (refinement: (K4 && Z3) <= (K4 && Z3))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 303.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && Z3) <= (K4 && Z3)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 150.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "consistency: G15",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 503.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L4 && P0)) implies (refinement: (L4 && P0) <= (L4 && P0))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 241.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L4 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 262.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L4 && P0) <= (L4 && P0)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P1 && Z3)) implies (refinement: (P1 && Z3) <= P1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 290.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P1 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P1 && Z3) <= P1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 107.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "consistency: G16",
    "testSuite": "NonConsistency",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 221.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: T7",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 481.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && K4)) implies (refinement: (K1 && K4) <= K1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 266.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && K4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 215.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && K4) <= K1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 462.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C1 && P4)) implies (refinement: (C1 && P4) <= P4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 245.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C1 && P4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 217.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C1 && P4) <= P4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 98.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "consistency: G17",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 104.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "consistency: G18",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 587.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L5 && P1)) implies (refinement: (L5 && P1) <= (L5 && P1))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 241.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L5 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 346.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L5 && P1) <= (L5 && P1)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 267.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: T8",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && Z3)) implies (refinement: (K4 && Z3) <= Z3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 207.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && Z3) <= Z3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 187.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "consistency: G19",
    "testSuite": "NonConsistency",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 493.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L4 && P0)) implies (refinement: (L4 && P0) <= P0)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 212.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L4 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 281.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L4 && P0) <= P0",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 503.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && P0)) implies (refinement: (K3 && P0) <= K3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 234.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 269.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && P0) <= K3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 98.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "consistency: G20",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 203.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: T9",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 502.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (F2 && P4)) implies (refinement: (F2 && P4) <= (F2 && P4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 230.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (F2 && P4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 272.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (F2 && P4) <= (F2 && P4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 510.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C1 && P4)) implies (refinement: (C1 && P4) <= C1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 240.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C1 && P4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 270.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C1 && P4) <= C1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 118.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "consistency: G21",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 111.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "consistency: G23",
    "testSuite": "NonConsistency",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 521.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L5 && P1)) implies (refinement: (L5 && P1) <= L5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 211.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L5 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 310.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L5 && P1) <= L5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 290.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: T10",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && Z3)) implies (refinement: (K4 && Z3) <= K4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 226.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && Z3) <= K4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 590.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L4 && P0)) implies (refinement: (L4 && P0) <= L4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 282.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L4 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 308.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L4 && P0) <= L4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 536.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && L6)) implies (refinement: (K3 && L6) <= (K3 && L6))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 211.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && L6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 325.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && L6) <= (K3 && L6)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 294.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: (T0 || T2)",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 254.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: T11",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 558.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (F2 && P4)) implies (refinement: (F2 && P4) <= P4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 305.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (F2 && P4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 253.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (F2 && P4) <= P4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 561.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C1 && P4)) implies (refinement: (C1 && P4) <= C2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 274.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C1 && P4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 287.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C1 && P4) <= C2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && Z3)) implies (refinement: (K2 && Z3) <= Z4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 212.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && Z3) <= Z4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 262.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: (T0 || T1)",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 41.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "consistency: (Machine || Researcher)",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 285.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: N1",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 43.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "consistency: (Administration || Machine)",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 16.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "consistency: (A || Q)",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && Z3)) implies (refinement: (K4 && Z3) <= Z4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 297.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && Z3) <= Z4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 47.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "consistency: (Adm2 || Machine)",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 56.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "consistency: (Adm2 || Researcher)",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 506.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && L6)) implies (refinement: (K3 && L6) <= L6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 210.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && L6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 296.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && L6) <= L6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 55.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: Test6) implies (refinement: Test6 <= Test6)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 28.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: Test6",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 27.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: Test6 <= Test6",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 434.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (F2 && P4)) implies (refinement: (F2 && P4) <= F2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 217.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (F2 && P4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 217.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (F2 && P4) <= F2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 563.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L4 && P0)) implies (refinement: (L4 && P0) <= P1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 289.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L4 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 274.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L4 && P0) <= P1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 240.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: N2",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 106.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: Test7) implies (refinement: Test7 <= Test7)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 69.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: Test7",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 37.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: Test7 <= Test7",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C1 && F2)) implies (refinement: (C1 && F2) <= (C1 && F2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 306.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C1 && F2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C1 && F2) <= (C1 && F2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 458.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && P6)) implies (refinement: (K2 && P6) <= (K2 && P6))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 260.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 198.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && P6) <= (K2 && P6)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 49.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: Test9) implies (refinement: Test9 <= Test9)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 24.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: Test9",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 25.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: Test9 <= Test9",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 51.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: Test10) implies (refinement: Test10 <= Test10)",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 26.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: Test10",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 25.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: Test10 <= Test10",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 202.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: N3",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 59.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: (Test10 && Test9)) implies (refinement: (Test10 && Test9) <= (Test10 && Test9))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 31.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: (Test10 && Test9)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 28.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: (Test10 && Test9) <= (Test10 && Test9)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 432.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P6 && Z4)) implies (refinement: (P6 && Z4) <= (P6 && Z4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 219.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P6 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 213.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P6 && Z4) <= (P6 && Z4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 402.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && L6)) implies (refinement: (K3 && L6) <= K3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 203.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && L6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 199.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && L6) <= K3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 385.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L4 && L6)) implies (refinement: (L4 && L6) <= (L4 && L6))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 196.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L4 && L6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 189.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L4 && L6) <= (L4 && L6)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 402.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P3 && P4)) implies (refinement: (P3 && P4) <= (P3 && P4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 205.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P3 && P4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 197.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P3 && P4) <= (P3 && P4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 182.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: N4",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 218.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: P2",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 378.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && P6)) implies (refinement: (K2 && P6) <= P7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 188.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 190.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && P6) <= P7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C1 && F2)) implies (refinement: (C1 && F2) <= C1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 199.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C1 && F2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C1 && F2) <= C1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 178.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: D1",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 194.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: P3",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 368.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P6 && Z4)) implies (refinement: (P6 && Z4) <= P7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 182.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P6 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 186.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P6 && Z4) <= P7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 391.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && P1)) implies (refinement: (K3 && P1) <= (K3 && P1))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 192.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 199.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && P1) <= (K3 && P1)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 386.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L4 && L6)) implies (refinement: (L4 && L6) <= L6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 197.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L4 && L6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 189.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L4 && L6) <= L6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 381.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P3 && P4)) implies (refinement: (P3 && P4) <= P4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 189.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P3 && P4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 192.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P3 && P4) <= P4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 388.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && P6)) implies (refinement: (K2 && P6) <= P6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 194.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 194.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && P6) <= P6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 300.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: D2",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 256.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: P4",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C1 && F2)) implies (refinement: (C1 && F2) <= F2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 203.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C1 && F2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C1 && F2) <= F2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": -815.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P6 && Z4)) implies (refinement: (P6 && Z4) <= P6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 187.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P6 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": -1002.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P6 && Z4) <= P6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": -977.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: K1",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": -1003.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: P5",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": -803.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && P1)) implies (refinement: (K3 && P1) <= P1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 199.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": -1002.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && P1) <= P1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": -802.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P3 && P4)) implies (refinement: (P3 && P4) <= P3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 193.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P3 && P4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": -995.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P3 && P4) <= P3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": -781.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L4 && L6)) implies (refinement: (L4 && L6) <= L4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 203.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L4 && L6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": -984.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L4 && L6) <= L4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Administration && HalfAdm2)) implies (refinement: (Administration && HalfAdm2) <= (Administration && HalfAdm2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 39.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Administration && HalfAdm2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Administration && HalfAdm2) <= (Administration && HalfAdm2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": -799.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && P6)) implies (refinement: (K2 && P6) <= K2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": -983.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 184.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && P6) <= K2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 203.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: P6",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 206.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: K2",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Administration && HalfAdm2)) implies (refinement: (Administration && HalfAdm2) <= HalfAdm2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 38.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Administration && HalfAdm2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Administration && HalfAdm2) <= HalfAdm2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C1 && F2)) implies (refinement: (C1 && F2) <= C2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": -938.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C1 && F2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C1 && F2) <= C2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Administration && HalfAdm2)) implies (refinement: (Administration && HalfAdm2) <= Administration)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 51.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Administration && HalfAdm2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Administration && HalfAdm2) <= Administration",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 404.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P6 && Z4)) implies (refinement: (P6 && Z4) <= Z4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 187.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P6 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 217.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P6 && Z4) <= Z4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 202.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: P7",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 405.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && P1)) implies (refinement: (K3 && P1) <= K3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 190.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 215.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && P1) <= K3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 307.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: K3",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 461.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L4 && P1)) implies (refinement: (L4 && P1) <= (L4 && P1))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 203.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L4 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 258.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L4 && P1) <= (L4 && P1)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C1 && P3)) implies (refinement: (C1 && P3) <= (C1 && P3))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 193.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C1 && P3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C1 && P3) <= (C1 && P3)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 302.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: L1",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 564.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && Z4)) implies (refinement: (K2 && Z4) <= (K2 && Z4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 324.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 240.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && Z4) <= (K2 && Z4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 246.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: K4",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 467.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P0 && P6)) implies (refinement: (P0 && P6) <= (P0 && P6))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 241.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P0 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 226.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P0 && P6) <= (P0 && P6)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 489.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && P7)) implies (refinement: (K3 && P7) <= (K3 && P7))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 237.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 252.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && P7) <= (K3 && P7)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 454.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && K4)) implies (refinement: (K3 && K4) <= (K3 && K4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 235.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && K4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 219.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && K4) <= (K3 && K4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 217.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: L2",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 421.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L4 && P1)) implies (refinement: (L4 && P1) <= L4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 215.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L4 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 206.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L4 && P1) <= L4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 310.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: K5",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C1 && P3)) implies (refinement: (C1 && P3) <= C1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 240.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C1 && P3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C1 && P3) <= C1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 197.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: L3",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 442.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && Z4)) implies (refinement: (K2 && Z4) <= K2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 226.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 216.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && Z4) <= K2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 431.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && P7)) implies (refinement: (K3 && P7) <= P7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 228.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 203.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && P7) <= P7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 203.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: K6",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 484.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P0 && P6)) implies (refinement: (P0 && P6) <= P7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 192.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P0 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 292.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P0 && P6) <= P7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 194.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: L4",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 439.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && K4)) implies (refinement: (K3 && K4) <= K4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 192.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && K4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 247.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && K4) <= K4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 471.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L4 && P1)) implies (refinement: (L4 && P1) <= P1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 202.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L4 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 269.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L4 && P1) <= P1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 225.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: P0",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 218.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: L5",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C1 && P3)) implies (refinement: (C1 && P3) <= C2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 250.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C1 && P3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C1 && P3) <= C2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 380.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && Z4)) implies (refinement: (K2 && Z4) <= Z4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 188.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 192.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && Z4) <= Z4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 417.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && P7)) implies (refinement: (K3 && P7) <= K3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 198.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 219.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && P7) <= K3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 221.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: L6",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 433.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && K4)) implies (refinement: (K3 && K4) <= K3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 211.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && K4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 222.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && K4) <= K3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 474.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P0 && P6)) implies (refinement: (P0 && P6) <= P6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 234.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P0 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 240.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P0 && P6) <= P6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 301.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: P1",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 17.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "consistency: (A || Imp)",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 46.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "consistency: Administration",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 449.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && L4)) implies (refinement: (K4 && L4) <= (K4 && L4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 227.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && L4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 222.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && L4) <= (K4 && L4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 36.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "consistency: Machine",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 40.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "consistency: Researcher",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 194.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: L7",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C1 && P3)) implies (refinement: (C1 && P3) <= P3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 190.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C1 && P3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C1 && P3) <= P3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 38.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "consistency: Spec",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 36.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "consistency: Machine3",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 462.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && P0)) implies (refinement: (K2 && P0) <= (K2 && P0))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 186.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 276.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && P0) <= (K2 && P0)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 42.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "consistency: Adm2",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 33.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "consistency: HalfAdm1",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && Z3)) implies (refinement: (K3 && Z3) <= (K3 && Z3))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 237.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && Z3) <= (K3 && Z3)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 36.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "consistency: HalfAdm2",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 188.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: Z1",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 38.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "consistency: (Administration || Researcher)",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 415.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (N1 && T11)) implies (refinement: (N1 && T11) <= (N1 && T11))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 200.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (N1 && T11)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 215.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (N1 && T11) <= (N1 && T11)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 410.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P0 && P6)) implies (refinement: (P0 && P6) <= P0)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 213.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P0 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 197.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P0 && P6) <= P0",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 41.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "consistency: (HalfAdm1 && HalfAdm2)",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 24.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "consistency: Test1",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 24.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "consistency: Test2",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 23.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "consistency: Test3",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 409.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && L4)) implies (refinement: (K4 && L4) <= L4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 221.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && L4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 188.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && L4) <= L4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 24.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "consistency: Test4",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 181.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: Z2",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 25.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "consistency: Test5",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 24.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "consistency: (Test1 && Test2)",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 411.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && L5)) implies (refinement: (K2 && L5) <= (K2 && L5))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 209.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && L5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 202.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && L5) <= (K2 && L5)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 26.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "consistency: (Test2 && Test3)",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 24.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "consistency: (Test1 && Test3)",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 378.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && P0)) implies (refinement: (K2 && P0) <= P0)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 190.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 188.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && P0) <= P0",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 25.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "consistency: (Test3 && Test4)",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 25.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "consistency: (Test6 && Test7)",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 25.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "consistency: Test8",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && Z3)) implies (refinement: (K3 && Z3) <= Z3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 187.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && Z3) <= Z3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 24.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "consistency: Test12",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 195.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: Z3",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 32.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/BigRefinement",
    "query": "consistency: Ref1",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 27.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/BigRefinement",
    "query": "consistency: Comp1",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 382.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (N1 && T11)) implies (refinement: (N1 && T11) <= T11)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 178.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (N1 && T11)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 204.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (N1 && T11) <= T11",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 9.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Unspec",
    "query": "consistency: A",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 387.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P0 && P6)) implies (refinement: (P0 && P6) <= P1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 189.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P0 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 198.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P0 && P6) <= P1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 27.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Unspec",
    "query": "consistency: AA",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 12.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Unspec",
    "query": "consistency: B",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 12.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/loop.xml",
    "query": "consistency: SelfloopNonZeno",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 369.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && L4)) implies (refinement: (K4 && L4) <= K4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 184.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && L4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 185.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && L4) <= K4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 226.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: Z4",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 409.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && L5)) implies (refinement: (K2 && L5) <= L5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 224.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && L5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 185.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && L5) <= L5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 123.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Adm2 && HalfAdm1)) implies (refinement: (Adm2 && HalfAdm1) <= (Adm2 && HalfAdm1))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 53.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Adm2 && HalfAdm1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 70.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Adm2 && HalfAdm1) <= (Adm2 && HalfAdm1)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 383.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && P0)) implies (refinement: (K2 && P0) <= P1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 188.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 195.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && P0) <= P1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 208.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: T1",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && Z3)) implies (refinement: (K3 && Z3) <= K3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 187.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && Z3) <= K3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 29.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: (Test1 && Test2) <= (Test1 && Test2)",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 29.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: (Test2 && Test3) <= Test1",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 29.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: (Test2 && Test3) <= Test2",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 186.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: Z5",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 144.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Adm2 && HalfAdm1)) implies (refinement: (HalfAdm1 && HalfAdm2) <= (Adm2 && HalfAdm1))",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 41.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Adm2 && HalfAdm1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 103.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (HalfAdm1 && HalfAdm2) <= (Adm2 && HalfAdm1)",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 386.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (N1 && T11)) implies (refinement: (N1 && T11) <= N1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 194.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (N1 && T11)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 192.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (N1 && T11) <= N1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 37.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: (Test2 && Test3) <= (Test1 && Test3)",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 394.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L6 && P6)) implies (refinement: (L6 && P6) <= (L6 && P6))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 199.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L6 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 195.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L6 && P6) <= (L6 && P6)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 62.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: (Test2 && Test5)) implies (refinement: (Test2 && Test5) <= (Test2 && Test5))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 29.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: (Test2 && Test5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 33.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: (Test2 && Test5) <= (Test2 && Test5)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 64.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: (Test2 && Test3) <= Test3",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 103.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Adm2 && HalfAdm1)) implies (refinement: Adm2 <= (Adm2 && HalfAdm1))",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 44.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Adm2 && HalfAdm1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 59.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: Adm2 <= (Adm2 && HalfAdm1)",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 52.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: (Test2 && Test3) <= (Test2 && Test3)",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 78.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: (Test2 && Test5)) implies (refinement: (Test2 && Test5) <= Test2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 46.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: (Test2 && Test5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 32.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: (Test2 && Test5) <= Test2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 189.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: Z6",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 55.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: (Test2 && Test3) <= (Test1 && Test2)",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 104.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Adm2 && HalfAdm1)) implies (refinement: (Adm2 && HalfAdm1) <= Adm2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 43.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Adm2 && HalfAdm1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 61.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Adm2 && HalfAdm1) <= Adm2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 57.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: (Test2 && Test5)) implies (refinement: (Test2 && Test5) <= Test5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 25.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: (Test2 && Test5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 32.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: (Test2 && Test5) <= Test5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 381.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && L5)) implies (refinement: (K2 && L5) <= K2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 192.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && L5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 189.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && L5) <= K2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 376.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && P0)) implies (refinement: (K2 && P0) <= K2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 189.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 187.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && P0) <= K2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 56.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: (Test1 && Test3) <= Test1",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 28.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: (Test1 && Test3) <= Test2",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && Z3)) implies (refinement: (K3 && Z3) <= Z4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 193.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && Z3) <= Z4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 30.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: (Test1 && Test3) <= (Test1 && Test3)",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 106.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Adm2 && HalfAdm1)) implies (refinement: (Adm2 && HalfAdm1) <= HalfAdm1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 52.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Adm2 && HalfAdm1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 54.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Adm2 && HalfAdm1) <= HalfAdm1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 27.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: (Test1 && Test3) <= Test3",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 28.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: (Test1 && Test3) <= (Test2 && Test3)",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 27.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: (Test1 && Test3) <= (Test1 && Test2)",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 36.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: (Test3 && Test4) <= (Test3 && Test4)",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 108.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Adm2 && HalfAdm1)) implies (refinement: (Adm2 && HalfAdm1) <= (HalfAdm1 && HalfAdm2))",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 42.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Adm2 && HalfAdm1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 66.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Adm2 && HalfAdm1) <= (HalfAdm1 && HalfAdm2)",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 388.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L6 && P6)) implies (refinement: (L6 && P6) <= P7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 201.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L6 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 187.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L6 && P6) <= P7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 244.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: Z7",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 32.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: (Test3 && Test4) <= Test4",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 31.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: (Test3 && Test4) <= Test5",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 54.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: (Test3 && Test4) <= Test3",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 124.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Adm2 && HalfAdm1)) implies (refinement: (Adm2 && HalfAdm1) <= HalfAdm2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 46.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Adm2 && HalfAdm1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 78.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Adm2 && HalfAdm1) <= HalfAdm2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 54.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: (Test6 && Test7) <= Test8",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 382.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (T3 && T5)) implies (refinement: (T3 && T5) <= (T3 && T5))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 195.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (T3 && T5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 187.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (T3 && T5) <= (T3 && T5)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 389.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && K5)) implies (refinement: (K2 && K5) <= (K2 && K5))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 183.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && K5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 206.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && K5) <= (K2 && K5)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Adm2 && Administration)) implies (refinement: (Adm2 && Administration) <= (Adm2 && Administration))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 39.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Adm2 && Administration)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Adm2 && Administration) <= (Adm2 && Administration)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 208.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: (T1 || T2)",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 47.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: (Test6 && Test7) <= (Test6 && Test7)",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 25.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: Test8 <= Test8",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 373.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && P6)) implies (refinement: (K3 && P6) <= (K3 && P6))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 185.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 188.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && P6) <= (K3 && P6)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 41.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: Test12 <= Test12",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 472.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && L6)) implies (refinement: (K2 && L6) <= (K2 && L6))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 207.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && L6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 265.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && L6) <= (K2 && L6)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Adm2 && Administration)) implies (refinement: (Adm2 && Administration) <= (HalfAdm1 && HalfAdm2))",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 45.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Adm2 && Administration)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Adm2 && Administration) <= (HalfAdm1 && HalfAdm2)",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 59.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/BigRefinement",
    "query": "refinement: Ref1 <= Ref1",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 404.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L6 && P6)) implies (refinement: (L6 && P6) <= L6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 186.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L6 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 218.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L6 && P6) <= L6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 79.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/BigRefinement",
    "query": "refinement: Comp1 <= Comp1",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 10.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Unspec",
    "query": "refinement: A <= A",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 12.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Unspec",
    "query": "refinement: AA <= AA",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 10.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Unspec",
    "query": "refinement: B <= B",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 16.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/loop.xml",
    "query": "refinement: SelfloopNonZeno <= SelfloopNonZeno",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 261.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: (F1 || F2)",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Adm2 && Administration)) implies (refinement: (Adm2 && Administration) <= HalfAdm2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 80.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Adm2 && Administration)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Adm2 && Administration) <= HalfAdm2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Adm2 && Administration)) implies (refinement: (Adm2 && Administration) <= Administration)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 85.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Adm2 && Administration)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Adm2 && Administration) <= Administration",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 432.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && K5)) implies (refinement: (K2 && K5) <= K5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 191.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && K5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 241.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && K5) <= K5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 480.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (T3 && T5)) implies (refinement: (T3 && T5) <= T3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 269.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (T3 && T5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 211.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (T3 && T5) <= T3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Adm2 && Administration)) implies (refinement: (Adm2 && Administration) <= Adm2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 41.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Adm2 && Administration)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Adm2 && Administration) <= Adm2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 248.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: T1 <= T1",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 244.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "consistency: (L1 || L2)",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 482.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && P6)) implies (refinement: (K3 && P6) <= P7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 201.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 281.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && P6) <= P7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 20.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/extrapolation_test.xml",
    "query": "consistency: Inf",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 33.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/misc_test.xml",
    "query": "consistency: GuardParan",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Adm2 && Administration)) implies (refinement: (Adm2 && Administration) <= HalfAdm1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 44.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Adm2 && Administration)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Adm2 && Administration) <= HalfAdm1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 596.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && L6)) implies (refinement: (K2 && L6) <= L6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 317.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && L6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 279.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && L6) <= L6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 111.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "consistency: G1",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 204.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: T2 <= T2",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 115.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Adm2 && HalfAdm2)) implies (refinement: (Adm2 && HalfAdm2) <= (Adm2 && HalfAdm2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 46.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Adm2 && HalfAdm2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 69.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Adm2 && HalfAdm2) <= (Adm2 && HalfAdm2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 93.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "consistency: G2",
    "testSuite": "Consistency",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 579.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L6 && P6)) implies (refinement: (L6 && P6) <= P6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 381.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L6 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 198.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L6 && P6) <= P6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 409.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && K5)) implies (refinement: (K2 && K5) <= K2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 214.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && K5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 195.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && K5) <= K2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 105.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Adm2 && HalfAdm2)) implies (refinement: (HalfAdm1 && HalfAdm2) <= (Adm2 && HalfAdm2))",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 42.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Adm2 && HalfAdm2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 63.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (HalfAdm1 && HalfAdm2) <= (Adm2 && HalfAdm2)",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 91.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "consistency: G3",
    "testSuite": "NonConsistency",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 190.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: T3 <= T3",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 459.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (T3 && T5)) implies (refinement: (T3 && T5) <= T5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 237.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (T3 && T5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 222.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (T3 && T5) <= T5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 404.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && P6)) implies (refinement: (K3 && P6) <= P6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 216.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 188.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && P6) <= P6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 91.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/ConsTests.xml",
    "query": "consistency: G4",
    "testSuite": "NonConsistency",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 122.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Adm2 && HalfAdm2)) implies (refinement: Adm2 <= (Adm2 && HalfAdm2))",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 54.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Adm2 && HalfAdm2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 68.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: Adm2 <= (Adm2 && HalfAdm2)",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 385.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && L6)) implies (refinement: (K2 && L6) <= K2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 190.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && L6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 195.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && L6) <= K2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 100.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Adm2 && HalfAdm2)) implies (refinement: (Adm2 && HalfAdm2) <= Adm2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 40.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Adm2 && HalfAdm2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 60.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Adm2 && HalfAdm2) <= Adm2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 189.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: C1 <= C1",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 387.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P1 && P6)) implies (refinement: (P1 && P6) <= (P1 && P6))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 198.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P1 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 189.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P1 && P6) <= (P1 && P6)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 100.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Adm2 && HalfAdm2)) implies (refinement: (Adm2 && HalfAdm2) <= HalfAdm1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 45.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Adm2 && HalfAdm2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 55.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Adm2 && HalfAdm2) <= HalfAdm1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 374.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && K6)) implies (refinement: (K2 && K6) <= (K2 && K6))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 186.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && K6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 188.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && K6) <= (K2 && K6)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (F2 && P3)) implies (refinement: (F2 && P3) <= (F2 && P3))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 185.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (F2 && P3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (F2 && P3) <= (F2 && P3)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 198.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: C1 <= C2",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 380.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && P6)) implies (refinement: (K3 && P6) <= K3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 186.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 194.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && P6) <= K3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 373.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && Z4)) implies (refinement: (K5 && Z4) <= (K5 && Z4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 186.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 187.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && Z4) <= (K5 && Z4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 383.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && P1)) implies (refinement: (K2 && P1) <= (K2 && P1))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 191.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 192.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && P1) <= (K2 && P1)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 258.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: C2 <= C1",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 388.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P1 && P6)) implies (refinement: (P1 && P6) <= P7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 196.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P1 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 192.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P1 && P6) <= P7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 372.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && K6)) implies (refinement: (K2 && K6) <= K6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 186.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && K6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 186.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && K6) <= K6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (F2 && P3)) implies (refinement: (F2 && P3) <= F2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 186.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (F2 && P3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (F2 && P3) <= F2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 489.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (T3 \\\\ T1)) implies (refinement: (T3 \\\\ T1) <= (T3 \\\\ T1))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 191.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (T3 \\\\ T1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 298.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (T3 \\\\ T1) <= (T3 \\\\ T1)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 389.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && Z4)) implies (refinement: (K3 && Z4) <= (K3 && Z4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 186.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 203.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && Z4) <= (K3 && Z4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 413.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && Z4)) implies (refinement: (K5 && Z4) <= K5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 184.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 229.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && Z4) <= K5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 206.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: C2 <= C2",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 473.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && P1)) implies (refinement: (K2 && P1) <= P1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 218.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 255.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && P1) <= P1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 408.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P1 && P6)) implies (refinement: (P1 && P6) <= P1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 213.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P1 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 195.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P1 && P6) <= P1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 212.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: F1 <= F1",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 407.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && K6)) implies (refinement: (K2 && K6) <= K2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 219.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && K6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 188.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && K6) <= K2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (F2 && P3)) implies (refinement: (F2 && P3) <= P3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 192.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (F2 && P3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (F2 && P3) <= P3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 399.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && Z4)) implies (refinement: (K3 && Z4) <= K3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 193.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 206.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && Z4) <= K3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 564.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (T3 \\\\ T1)) implies (refinement: T2 <= (T3 \\\\ T1))",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 216.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (T3 \\\\ T1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 348.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: T2 <= (T3 \\\\ T1)",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 494.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && Z4)) implies (refinement: (K5 && Z4) <= Z4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 188.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 306.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && Z4) <= Z4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 268.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: F2 <= F2",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 459.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && P1)) implies (refinement: (K2 && P1) <= K2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 198.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 261.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && P1) <= K2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 476.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && K2)) implies (refinement: (K1 && K2) <= (K1 && K2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 260.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && K2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 216.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && K2) <= (K1 && K2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 221.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: F3 <= F3",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 501.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P1 && P6)) implies (refinement: (P1 && P6) <= P6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 267.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P1 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 234.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P1 && P6) <= P6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P7 && Z3)) implies (refinement: (P7 && Z3) <= (P7 && Z3))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 259.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P7 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P7 && Z3) <= (P7 && Z3)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 471.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && Z4)) implies (refinement: (K3 && Z4) <= Z4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 251.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 220.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && Z4) <= Z4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 189.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: T4 <= T3",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 440.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && P0)) implies (refinement: (K5 && P0) <= (K5 && P0))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 251.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 189.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && P0) <= (K5 && P0)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 510.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (T3 \\\\ T1)) implies (refinement: (T0 || T2) <= (T3 \\\\ T1))",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 254.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (T3 \\\\ T1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 256.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (T0 || T2) <= (T3 \\\\ T1)",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 190.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: T4 <= T4",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 479.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && K4)) implies (refinement: (K2 && K4) <= (K2 && K4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 292.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && K4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 187.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && K4) <= (K2 && K4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 398.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && P6)) implies (refinement: (K4 && P6) <= (K4 && P6))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 191.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 207.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && P6) <= (K4 && P6)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 419.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && K2)) implies (refinement: (K1 && K2) <= K1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 211.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && K2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 208.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && K2) <= K1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P7 && Z3)) implies (refinement: (P7 && Z3) <= P7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 197.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P7 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P7 && Z3) <= P7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 417.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && P0)) implies (refinement: (K3 && P0) <= (K3 && P0))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 211.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 206.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && P0) <= (K3 && P0)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 191.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: T0 <= T0",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 385.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && P0)) implies (refinement: (K5 && P0) <= P0)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 194.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 191.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && P0) <= P0",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 429.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (T3 \\\\ T0)) implies (refinement: (T3 \\\\ T0) <= (T3 \\\\ T0))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 212.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (T3 \\\\ T0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 217.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (T3 \\\\ T0) <= (T3 \\\\ T0)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 196.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: T5 <= T5",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 398.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && K4)) implies (refinement: (K2 && K4) <= K4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 195.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && K4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 203.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && K4) <= K4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 420.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && P6)) implies (refinement: (K4 && P6) <= P7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 214.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 206.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && P6) <= P7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 421.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && K2)) implies (refinement: (K1 && K2) <= K2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 214.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && K2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 207.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && K2) <= K2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P7 && Z3)) implies (refinement: (P7 && Z3) <= Z3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 212.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P7 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P7 && Z3) <= Z3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 405.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && P0)) implies (refinement: (K3 && P0) <= P0)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 197.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 208.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && P0) <= P0",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 217.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: T6 <= T5",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 384.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && P0)) implies (refinement: (K5 && P0) <= K5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 189.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 195.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && P0) <= K5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 221.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: T6 <= T6",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 430.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && K4)) implies (refinement: (K2 && K4) <= K2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 210.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && K4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 220.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && K4) <= K2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 445.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && K3)) implies (refinement: (K2 && K3) <= (K2 && K3))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 209.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && K3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 236.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && K3) <= (K2 && K3)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 394.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && P0)) implies (refinement: (K3 && P0) <= P1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 194.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 200.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && P0) <= P1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P7 && Z3)) implies (refinement: (P7 && Z3) <= Z4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 222.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P7 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P7 && Z3) <= Z4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 568.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && P6)) implies (refinement: (K4 && P6) <= P6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 262.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 306.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && P6) <= P6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 226.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: T7 <= T7",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 450.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && P0)) implies (refinement: (K5 && P0) <= P1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 206.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 244.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && P0) <= P1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 743.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (T3 \\\\ T0)) implies (refinement: (T1 || T2) <= (T3 \\\\ T0))",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 291.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (T3 \\\\ T0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 452.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (T1 || T2) <= (T3 \\\\ T0)",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 231.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: T8 <= T8",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (T4 && T6)) implies (refinement: (T4 && T6) <= (T4 && T6))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 238.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (T4 && T6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (T4 && T6) <= (T4 && T6)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 424.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && K3)) implies (refinement: (K2 && K3) <= K3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 217.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && K3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 207.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && K3) <= K3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 452.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && P6)) implies (refinement: (K6 && P6) <= K6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 244.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 208.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && P6) <= K6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 435.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && P6)) implies (refinement: (K4 && P6) <= K4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 224.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 211.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && P6) <= K4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 461.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && L6)) implies (refinement: (K5 && L6) <= (K5 && L6))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 216.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && L6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 245.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && L6) <= (K5 && L6)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 543.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P7 && Z4)) implies (refinement: (P7 && Z4) <= (P7 && Z4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 325.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P7 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 218.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P7 && Z4) <= (P7 && Z4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 253.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: T9 <= T9",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (T4 && T6)) implies (refinement: (T4 && T6) <= T6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 207.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (T4 && T6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (T4 && T6) <= T6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 295.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: T10 <= T10",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 442.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P0 && Z4)) implies (refinement: (P0 && Z4) <= (P0 && Z4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 214.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P0 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 228.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P0 && Z4) <= (P0 && Z4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 594.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && K3)) implies (refinement: (K2 && K3) <= K2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 221.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && K3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 373.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && K3) <= K2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 570.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && P6)) implies (refinement: (K6 && P6) <= P6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 282.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 288.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && P6) <= P6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 491.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && L6)) implies (refinement: (K5 && L6) <= L6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 226.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && L6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 265.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && L6) <= L6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 509.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P7 && Z4)) implies (refinement: (P7 && Z4) <= P7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 209.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P7 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 300.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P7 && Z4) <= P7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 991.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (T3 \\\\ T2)) implies (refinement: (T3 \\\\ T2) <= (T3 \\\\ T2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 266.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (T3 \\\\ T2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 725.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (T3 \\\\ T2) <= (T3 \\\\ T2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 328.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: T11 <= T11",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (T4 && T6)) implies (refinement: (T4 && T6) <= T4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 288.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (T4 && T6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (T4 && T6) <= T4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 299.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: N1 <= N2",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 605.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P0 && Z4)) implies (refinement: (P0 && Z4) <= P0)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 393.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P0 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 212.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P0 && Z4) <= P0",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 592.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && P7)) implies (refinement: (K2 && P7) <= (K2 && P7))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 331.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 261.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && P7) <= (K2 && P7)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 518.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && L6)) implies (refinement: (K5 && L6) <= K5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 251.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && L6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 267.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && L6) <= K5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 526.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P7 && Z4)) implies (refinement: (P7 && Z4) <= Z4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 265.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P7 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 261.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P7 && Z4) <= Z4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 618.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && Z4)) implies (refinement: (K6 && Z4) <= (K6 && Z4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 374.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 244.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && Z4) <= (K6 && Z4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 631.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (T3 \\\\ T2)) implies (refinement: T1 <= (T3 \\\\ T2))",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 300.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (T3 \\\\ T2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 331.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: T1 <= (T3 \\\\ T2)",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 238.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: N1 <= N1",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 444.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && L5)) implies (refinement: (K5 && L5) <= (K5 && L5))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 230.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && L5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 214.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && L5) <= (K5 && L5)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 226.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: N2 <= N2",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 461.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P0 && Z4)) implies (refinement: (P0 && Z4) <= P1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 249.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P0 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 212.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P0 && Z4) <= P1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 524.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && P7)) implies (refinement: (K2 && P7) <= P7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 281.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 243.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && P7) <= P7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 519.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && P1)) implies (refinement: (K5 && P1) <= (K5 && P1))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 214.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 305.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && P1) <= (K5 && P1)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 520.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && Z4)) implies (refinement: (K6 && Z4) <= K6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 305.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 215.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && Z4) <= K6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 580.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (Z5 && Z7)) implies (refinement: (Z5 && Z7) <= Z5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 299.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (Z5 && Z7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 281.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (Z5 && Z7) <= Z5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 240.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: N3 <= N3",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 507.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (T3 \\\\ T2)) implies (refinement: (T0 || T1) <= (T3 \\\\ T2))",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 231.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (T3 \\\\ T2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 276.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (T0 || T1) <= (T3 \\\\ T2)",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 434.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && L5)) implies (refinement: (K5 && L5) <= L5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 205.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && L5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 229.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && L5) <= L5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 192.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: N4 <= N4",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 489.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P0 && Z4)) implies (refinement: (P0 && Z4) <= Z4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 250.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P0 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 239.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P0 && Z4) <= Z4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 258.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Spec \\\\ Machine)) implies (refinement: (Spec \\\\ Machine) <= (Spec \\\\ Machine))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 73.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Spec \\\\ Machine)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 185.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Spec \\\\ Machine) <= (Spec \\\\ Machine)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 468.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && P7)) implies (refinement: (K2 && P7) <= K2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 224.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 244.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && P7) <= K2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 499.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && P1)) implies (refinement: (K5 && P1) <= K5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 277.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 222.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && P1) <= K5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 456.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && Z4)) implies (refinement: (K6 && Z4) <= Z4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 246.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 210.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && Z4) <= Z4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 120.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Adm2 && HalfAdm2)) implies (refinement: (Adm2 && HalfAdm2) <= (HalfAdm1 && HalfAdm2))",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 43.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Adm2 && HalfAdm2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 77.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Adm2 && HalfAdm2) <= (HalfAdm1 && HalfAdm2)",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 300.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: D1 <= D1",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 515.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (Z5 && Z7)) implies (refinement: (Z5 && Z7) <= Z7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 256.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (Z5 && Z7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 259.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (Z5 && Z7) <= Z7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 115.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Adm2 && HalfAdm2)) implies (refinement: (Adm2 && HalfAdm2) <= HalfAdm2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 46.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Adm2 && HalfAdm2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 69.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Adm2 && HalfAdm2) <= HalfAdm2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 497.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && L5)) implies (refinement: (K5 && L5) <= K5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 267.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && L5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 230.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && L5) <= K5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Administration && HalfAdm1)) implies (refinement: (Administration && HalfAdm1) <= (Administration && HalfAdm1))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 88.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Administration && HalfAdm1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Administration && HalfAdm1) <= (Administration && HalfAdm1)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Administration && HalfAdm1)) implies (refinement: (Administration && HalfAdm1) <= Administration)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 44.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Administration && HalfAdm1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Administration && HalfAdm1) <= Administration",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && Z3)) implies (refinement: (K2 && Z3) <= (K2 && Z3))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 218.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && Z3) <= (K2 && Z3)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 284.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: D2 <= D2",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 405.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && P1)) implies (refinement: (K5 && P1) <= P1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 205.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 200.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && P1) <= P1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Administration && HalfAdm1)) implies (refinement: (Administration && HalfAdm1) <= HalfAdm1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 108.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Administration && HalfAdm1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Administration && HalfAdm1) <= HalfAdm1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 589.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && P0)) implies (refinement: (K6 && P0) <= (K6 && P0))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 347.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 242.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && P0) <= (K6 && P0)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 495.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (F3 && T3)) implies (refinement: (F3 && T3) <= (F3 && T3))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 217.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (F3 && T3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 278.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (F3 && T3) <= (F3 && T3)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 228.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: D2 <= D1",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 512.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && L5)) implies (refinement: (K6 && L5) <= (K6 && L5))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 291.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && L5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 221.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && L5) <= (K6 && L5)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && Z3)) implies (refinement: (K2 && Z3) <= Z3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 216.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && Z3) <= Z3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 408.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && K5)) implies (refinement: (K4 && K5) <= (K4 && K5))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 201.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && K5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 207.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && K5) <= (K4 && K5)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 396.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: K1 <= K1",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 493.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && P0)) implies (refinement: (K6 && P0) <= P0)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 248.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 245.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && P0) <= P0",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 560.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C1 && L7)) implies (refinement: (C1 && L7) <= (C1 && L7))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 349.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C1 && L7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 211.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C1 && L7) <= (C1 && L7)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 506.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (F3 && T3)) implies (refinement: (F3 && T3) <= T3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 237.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (F3 && T3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 269.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (F3 && T3) <= T3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 425.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && L5)) implies (refinement: (K6 && L5) <= L5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 194.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && L5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 231.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && L5) <= L5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 245.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: K2 <= K2",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 483.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && K5)) implies (refinement: (K4 && K5) <= K5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 278.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && K5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 205.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && K5) <= K5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && Z3)) implies (refinement: (K2 && Z3) <= K2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 237.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && Z3) <= K2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 30.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "refinement: AA <= AA",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 18.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "refinement: (A || G) <= (A || G)",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 24.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "refinement: (A || G) <= (A || Q)",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 207.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: K3 <= K3",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 61.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Administration <= Administration",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 437.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C1 && L7)) implies (refinement: (C1 && L7) <= C1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 221.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C1 && L7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 216.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C1 && L7) <= C1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 47.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Machine <= Machine",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 51.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Researcher <= Researcher",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 505.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (F3 && T3)) implies (refinement: (F3 && T3) <= F3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 287.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (F3 && T3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 218.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (F3 && T3) <= F3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 528.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && P0)) implies (refinement: (K6 && P0) <= P1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 275.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 253.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && P0) <= P1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 46.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Spec <= Spec",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 231.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: K4 <= K4",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 47.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Machine3 <= Machine",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 41.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Machine3 <= Machine3",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 479.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && K5)) implies (refinement: (K4 && K5) <= K4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 243.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && K5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 236.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && K5) <= K4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 64.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Adm2 <= Adm2",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 59.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Adm2 <= HalfAdm1",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 82.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Adm2 <= (HalfAdm1 && HalfAdm2)",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 464.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C1 && L7)) implies (refinement: (C1 && L7) <= C2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 212.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C1 && L7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 252.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C1 && L7) <= C2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 54.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Adm2 <= HalfAdm2",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 456.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && P0)) implies (refinement: (K6 && P0) <= K6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 204.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && P0)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 252.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && P0) <= K6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 75.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: HalfAdm1 <= HalfAdm1",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 491.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (F3 && T5)) implies (refinement: (F3 && T5) <= (F3 && T5))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 238.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (F3 && T5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 253.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (F3 && T5) <= (F3 && T5)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 62.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: HalfAdm2 <= HalfAdm2",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 525.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L5 && P1)) implies (refinement: (L5 && P1) <= P1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 283.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L5 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 242.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L5 && P1) <= P1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 515.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P5 && Z7)) implies (refinement: (P5 && Z7) <= (P5 && Z7))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 264.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P5 && Z7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 251.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P5 && Z7) <= (P5 && Z7)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 186.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: (Administration || Researcher) <= (Administration || Researcher)",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 126.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: (HalfAdm1 && HalfAdm2) <= Adm2",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 465.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C1 && L7)) implies (refinement: (C1 && L7) <= L7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 245.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C1 && L7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 220.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C1 && L7) <= L7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 424.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && L6)) implies (refinement: (K6 && L6) <= (K6 && L6))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 213.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && L6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 211.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && L6) <= (K6 && L6)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 78.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: (HalfAdm1 && HalfAdm2) <= HalfAdm1",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 68.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: (HalfAdm1 && HalfAdm2) <= (HalfAdm1 && HalfAdm2)",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 512.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (F3 && T5)) implies (refinement: (F3 && T5) <= F3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 233.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (F3 && T5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 279.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (F3 && T5) <= F3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 57.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: (HalfAdm1 && HalfAdm2) <= HalfAdm2",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 29.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: Test1 <= Test1",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 28.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: Test2 <= Test2",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 30.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: Test3 <= Test3",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 532.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && L5)) implies (refinement: (K4 && L5) <= (K4 && L5))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 299.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && L5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 233.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && L5) <= (K4 && L5)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 492.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P5 && Z7)) implies (refinement: (P5 && Z7) <= Z7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 293.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P5 && Z7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 199.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P5 && Z7) <= Z7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 27.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: Test4 <= Test4",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 30.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: Test5 <= Test5",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 31.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: (Test1 && Test2) <= Test1",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 30.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: (Test1 && Test2) <= Test2",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 41.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: (Test1 && Test2) <= (Test1 && Test3)",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 442.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L7 && P2)) implies (refinement: (L7 && P2) <= (L7 && P2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 240.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L7 && P2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 202.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L7 && P2) <= (L7 && P2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 32.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: (Test1 && Test2) <= Test3",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 44.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "refinement: (Test1 && Test2) <= (Test2 && Test3)",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 517.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && L6)) implies (refinement: (K6 && L6) <= L6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 273.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && L6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 244.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && L6) <= L6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 54.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: Machine <= Machine3",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 447.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (F3 && T5)) implies (refinement: (F3 && T5) <= T5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 203.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (F3 && T5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 244.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (F3 && T5) <= T5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 76.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/BigRefinement",
    "query": "refinement: Comp1 <= Ref1",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 40.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/DelayAdd",
    "query": "refinement: A1 <= (B \\\\ A2)",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 37.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/DelayAdd",
    "query": "refinement: A2 <= (B \\\\ A1)",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 452.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && L5)) implies (refinement: (K4 && L5) <= L5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 213.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && L5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 239.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && L5) <= L5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 32.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/DelayAdd",
    "query": "refinement: (A1 || A2) <= B",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 452.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P5 && Z7)) implies (refinement: (P5 && Z7) <= P5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 220.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P5 && Z7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 232.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P5 && Z7) <= P5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 28.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/DelayAdd",
    "query": "refinement: C1 <= C2",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 68.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/conjun.xml",
    "query": "refinement: (P0 && P1) <= P2",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 3443.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Spec \\\\ Machine)) implies (refinement: (Administration || Researcher) <= (Spec \\\\ Machine))",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 43.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Spec \\\\ Machine)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 3400.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Administration || Researcher) <= (Spec \\\\ Machine)",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 449.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L7 && P2)) implies (refinement: (L7 && P2) <= P2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 213.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L7 && P2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 236.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L7 && P2) <= P2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 87.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/conjun.xml",
    "query": "refinement: (P11 && P12) <= P13",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 433.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && L6)) implies (refinement: (K6 && L6) <= K6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 207.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && L6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 226.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && L6) <= K6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && Z2)) implies (refinement: (K2 && Z2) <= (K2 && Z2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 274.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && Z2) <= (K2 && Z2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 203.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: T9 <= T8",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 434.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && L5)) implies (refinement: (K4 && L5) <= K4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 212.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && L5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 222.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && L5) <= K4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C2 && P2)) implies (refinement: (C2 && P2) <= (C2 && P2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 245.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C2 && P2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C2 && P2) <= (C2 && P2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 413.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Spec \\\\ Researcher)) implies (refinement: (Spec \\\\ Researcher) <= (Spec \\\\ Researcher))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 71.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Spec \\\\ Researcher)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 342.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Spec \\\\ Researcher) <= (Spec \\\\ Researcher)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 428.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L7 && P2)) implies (refinement: (L7 && P2) <= L7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 213.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L7 && P2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 215.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L7 && P2) <= L7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 209.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: K1 <= K2",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 489.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && P1)) implies (refinement: (K6 && P1) <= (K6 && P1))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 273.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 216.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && P1) <= (K6 && P1)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && Z2)) implies (refinement: (K2 && Z2) <= Z2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 213.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && Z2) <= Z2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 201.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: K3 <= K4",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 431.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (D1 && T11)) implies (refinement: (D1 && T11) <= (D1 && T11))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 199.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (D1 && T11)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 232.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (D1 && T11) <= (D1 && T11)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C2 && P2)) implies (refinement: (C2 && P2) <= C1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 208.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C2 && P2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C2 && P2) <= C1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 405.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C2 && L7)) implies (refinement: (C2 && L7) <= (C2 && L7))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 209.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C2 && L7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 196.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C2 && L7) <= (C2 && L7)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 222.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: K5 <= K6",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 420.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && P1)) implies (refinement: (K6 && P1) <= P1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 206.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 214.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && P1) <= P1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && Z2)) implies (refinement: (K2 && Z2) <= K2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 194.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && Z2) <= K2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 440.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (D1 && T11)) implies (refinement: (D1 && T11) <= T11)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 245.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (D1 && T11)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 195.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (D1 && T11) <= T11",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 269.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: P2 <= P3",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C2 && P2)) implies (refinement: (C2 && P2) <= P2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 240.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C2 && P2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C2 && P2) <= P2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 476.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C2 && L7)) implies (refinement: (C2 && L7) <= C1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 248.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C2 && L7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 228.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C2 && L7) <= C1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 229.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: L1 <= (L3 \\\\ L2)",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 473.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && P1)) implies (refinement: (K6 && P1) <= K6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 237.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 236.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && P1) <= K6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 467.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L5 && Z2)) implies (refinement: (L5 && Z2) <= (L5 && Z2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 240.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L5 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 227.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L5 && Z2) <= (L5 && Z2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 424.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (D1 && T11)) implies (refinement: (D1 && T11) <= D1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 222.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (D1 && T11)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 202.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (D1 && T11) <= D1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 206.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: L2 <= (L3 \\\\ L1)",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C2 && P2)) implies (refinement: (C2 && P2) <= C2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 251.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C2 && P2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C2 && P2) <= C2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 429.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C2 && L7)) implies (refinement: (C2 && L7) <= C2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 227.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C2 && L7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 202.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C2 && L7) <= C2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 189.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: (L1 || L2) <= L3",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 399.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && K6)) implies (refinement: (K4 && K6) <= (K4 && K6))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 197.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && K6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 202.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && K6) <= (K4 && K6)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 306.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (D1 && N1)) implies (refinement: (D1 && N1) <= (D1 && N1))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 143.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (D1 && N1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 163.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (D1 && N1) <= (D1 && N1)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 377.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L5 && Z2)) implies (refinement: (L5 && Z2) <= L5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 188.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L5 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 189.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L5 && Z2) <= L5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 187.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: Q1 <= Q2",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 387.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P2 && P4)) implies (refinement: (P2 && P4) <= (P2 && P4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 196.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P2 && P4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 191.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P2 && P4) <= (P2 && P4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 395.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C2 && L7)) implies (refinement: (C2 && L7) <= L7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 206.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C2 && L7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 189.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C2 && L7) <= L7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 205.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "refinement: Q2 <= Q1",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 378.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && K6)) implies (refinement: (K4 && K6) <= K6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 180.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && K6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 198.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && K6) <= K6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 378.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (D1 && N1)) implies (refinement: (D1 && N1) <= N1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 179.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (D1 && N1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 199.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (D1 && N1) <= N1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 385.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L5 && Z2)) implies (refinement: (L5 && Z2) <= Z2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 180.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L5 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 205.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L5 && Z2) <= Z2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 398.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P2 && P4)) implies (refinement: (P2 && P4) <= P4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 190.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P2 && P4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 208.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P2 && P4) <= P4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 395.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L7 && P4)) implies (refinement: (L7 && P4) <= (L7 && P4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 203.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L7 && P4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 192.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L7 && P4) <= (L7 && P4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 377.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K4 && K6)) implies (refinement: (K4 && K6) <= K4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 193.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K4 && K6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 184.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K4 && K6) <= K4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 405.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (D1 && N1)) implies (refinement: (D1 && N1) <= D1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 205.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (D1 && N1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 200.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (D1 && N1) <= D1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && Z2)) implies (refinement: (K5 && Z2) <= (K5 && Z2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 212.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && Z2) <= (K5 && Z2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 374.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P2 && P4)) implies (refinement: (P2 && P4) <= P2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 180.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P2 && P4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 194.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P2 && P4) <= P2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 385.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L7 && P4)) implies (refinement: (L7 && P4) <= P4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 193.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L7 && P4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 192.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L7 && P4) <= P4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 378.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (T8 && T9)) implies (refinement: (T8 && T9) <= (T8 && T9))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 185.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (T8 && T9)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 193.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (T8 && T9) <= (T8 && T9)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 387.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && K6)) implies (refinement: (K5 && K6) <= (K5 && K6))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 196.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && K6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 191.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && K6) <= (K5 && K6)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && Z2)) implies (refinement: (K5 && Z2) <= K5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 189.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && Z2) <= K5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (F2 && P2)) implies (refinement: (F2 && P2) <= (F2 && P2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 161.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (F2 && P2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (F2 && P2) <= (F2 && P2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 390.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L7 && P4)) implies (refinement: (L7 && P4) <= L7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 202.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L7 && P4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 188.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L7 && P4) <= L7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 414.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (T8 && T9)) implies (refinement: (T8 && T9) <= T8)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 192.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (T8 && T9)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 222.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (T8 && T9) <= T8",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 388.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && K6)) implies (refinement: (K5 && K6) <= K5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 196.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && K6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 192.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && K6) <= K5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && Z2)) implies (refinement: (K5 && Z2) <= Z2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 192.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && Z2) <= Z2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (F2 && P2)) implies (refinement: (F2 && P2) <= P2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 200.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (F2 && P2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (F2 && P2) <= P2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 340.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (F2 && L7)) implies (refinement: (F2 && L7) <= (F2 && L7))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 204.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (F2 && L7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 136.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (F2 && L7) <= (F2 && L7)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 334.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && K6)) implies (refinement: (K5 && K6) <= K6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 180.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && K6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 154.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && K6) <= K6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 3395.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Spec \\\\ Researcher)) implies (refinement: (Administration || Machine) <= (Spec \\\\ Researcher))",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 40.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Spec \\\\ Researcher)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 3355.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Administration || Machine) <= (Spec \\\\ Researcher)",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 377.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (T8 && T9)) implies (refinement: (T8 && T9) <= T9)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 188.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (T8 && T9)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 189.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (T8 && T9) <= T9",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && Z2)) implies (refinement: (K6 && Z2) <= (K6 && Z2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 181.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && Z2) <= (K6 && Z2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 55.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: (Test1 && Test4)) implies (refinement: (Test1 && Test4) <= (Test1 && Test4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 23.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: (Test1 && Test4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 32.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: (Test1 && Test4) <= (Test1 && Test4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 41.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: (Test1 && Test4)) implies (refinement: (Test1 && Test4) <= Test1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 18.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: (Test1 && Test4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 23.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: (Test1 && Test4) <= Test1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (F2 && P2)) implies (refinement: (F2 && P2) <= F2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 190.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (F2 && P2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (F2 && P2) <= F2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 61.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: (Test1 && Test4)) implies (refinement: (Test1 && Test4) <= Test4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 23.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: (Test1 && Test4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 38.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: (Test1 && Test4) <= Test4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 70.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: (Test1 && Test5)) implies (refinement: (Test1 && Test5) <= (Test1 && Test5))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 31.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: (Test1 && Test5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 39.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: (Test1 && Test5) <= (Test1 && Test5)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 395.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (F2 && L7)) implies (refinement: (F2 && L7) <= F2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 195.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (F2 && L7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 200.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (F2 && L7) <= F2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 69.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: (Test1 && Test5)) implies (refinement: (Test1 && Test5) <= Test1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 33.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: (Test1 && Test5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 36.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: (Test1 && Test5) <= Test1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 382.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && K5)) implies (refinement: (K1 && K5) <= (K1 && K5))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 190.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && K5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 192.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && K5) <= (K1 && K5)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 64.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: (Test1 && Test5)) implies (refinement: (Test1 && Test5) <= Test5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 30.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: (Test1 && Test5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 34.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: (Test1 && Test5) <= Test5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && Z2)) implies (refinement: (K6 && Z2) <= Z2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 199.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && Z2) <= Z2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 60.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: (Test2 && Test4)) implies (refinement: (Test2 && Test4) <= (Test2 && Test4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 25.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: (Test2 && Test4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 35.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: (Test2 && Test4) <= (Test2 && Test4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 427.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (F3 \\\\ F2)) implies (refinement: (F3 \\\\ F2) <= (F3 \\\\ F2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 186.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (F3 \\\\ F2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 241.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (F3 \\\\ F2) <= (F3 \\\\ F2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 64.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: (Test2 && Test4)) implies (refinement: (Test2 && Test4) <= Test4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 28.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: (Test2 && Test4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 36.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: (Test2 && Test4) <= Test4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 404.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P2 && P3)) implies (refinement: (P2 && P3) <= (P2 && P3))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 206.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P2 && P3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 198.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P2 && P3) <= (P2 && P3)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 70.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: (Test2 && Test4)) implies (refinement: (Test2 && Test4) <= Test2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 28.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: (Test2 && Test4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 42.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: (Test2 && Test4) <= Test2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 367.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (F2 && L7)) implies (refinement: (F2 && L7) <= L7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 184.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (F2 && L7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 183.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (F2 && L7) <= L7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 78.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Machine && Machine3)) implies (refinement: (Machine && Machine3) <= (Machine && Machine3))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 33.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Machine && Machine3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 45.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Machine && Machine3) <= (Machine && Machine3)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 70.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Machine && Machine3)) implies (refinement: Machine3 <= (Machine && Machine3))",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 35.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Machine && Machine3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 35.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: Machine3 <= (Machine && Machine3)",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 360.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && K5)) implies (refinement: (K1 && K5) <= K5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 181.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && K5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 179.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && K5) <= K5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && Z2)) implies (refinement: (K6 && Z2) <= K6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 179.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && Z2) <= K6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 60.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Machine && Machine3)) implies (refinement: (Machine && Machine3) <= Machine)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 33.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Machine && Machine3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 27.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Machine && Machine3) <= Machine",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 379.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (F3 \\\\ F2)) implies (refinement: F1 <= (F3 \\\\ F2))",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 187.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (F3 \\\\ F2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 192.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: F1 <= (F3 \\\\ F2)",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 82.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Machine && Machine3)) implies (refinement: (Machine && Machine3) <= Machine3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 37.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Machine && Machine3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 45.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Machine && Machine3) <= Machine3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 379.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P2 && P3)) implies (refinement: (P2 && P3) <= P2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 187.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P2 && P3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 192.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P2 && P3) <= P2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 365.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L7 && P3)) implies (refinement: (L7 && P3) <= (L7 && P3))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 162.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L7 && P3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 203.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L7 && P3) <= (L7 && P3)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 393.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && K5)) implies (refinement: (K1 && K5) <= K1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 192.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && K5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 201.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && K5) <= K1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && Z2)) implies (refinement: (K1 && Z2) <= (K1 && Z2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 199.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && Z2) <= (K1 && Z2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 486.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (F3 \\\\ F1)) implies (refinement: (F3 \\\\ F1) <= (F3 \\\\ F1))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 218.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (F3 \\\\ F1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 268.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (F3 \\\\ F1) <= (F3 \\\\ F1)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 449.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C1 && C2)) implies (refinement: (C1 && C2) <= (C1 && C2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 221.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C1 && C2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 228.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C1 && C2) <= (C1 && C2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 382.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L7 && P3)) implies (refinement: (L7 && P3) <= L7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 192.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L7 && P3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 190.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L7 && P3) <= L7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 451.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P2 && P3)) implies (refinement: (P2 && P3) <= P3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 201.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P2 && P3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 250.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P2 && P3) <= P3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 412.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && K5)) implies (refinement: (K3 && K5) <= (K3 && K5))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 199.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && K5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 213.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && K5) <= (K3 && K5)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && Z2)) implies (refinement: (K1 && Z2) <= Z2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 193.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && Z2) <= Z2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 399.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C1 && C2)) implies (refinement: C2 <= (C1 && C2))",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 199.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C1 && C2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 200.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: C2 <= (C1 && C2)",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 457.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (F3 \\\\ F1)) implies (refinement: F2 <= (F3 \\\\ F1))",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 226.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (F3 \\\\ F1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 231.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: F2 <= (F3 \\\\ F1)",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 405.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L7 && P3)) implies (refinement: (L7 && P3) <= P3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 201.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L7 && P3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 204.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L7 && P3) <= P3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 405.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C2 && P4)) implies (refinement: (C2 && P4) <= (C2 && P4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 192.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C2 && P4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 213.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C2 && P4) <= (C2 && P4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 153.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Spec \\\\ Administration)) implies (refinement: (Spec \\\\ Administration) <= (Spec \\\\ Administration))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 48.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Spec \\\\ Administration)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 105.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Spec \\\\ Administration) <= (Spec \\\\ Administration)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && Z2)) implies (refinement: (K1 && Z2) <= K1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 187.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && Z2) <= K1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 438.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && K5)) implies (refinement: (K3 && K5) <= K5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 144.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && K5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 294.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && K5) <= K5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 431.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C1 && C2)) implies (refinement: C1 <= (C1 && C2))",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 218.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C1 && C2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 213.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: C1 <= (C1 && C2)",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 424.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C2 && P4)) implies (refinement: (C2 && P4) <= P4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 193.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C2 && P4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 231.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C2 && P4) <= P4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 501.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P5 && Z5)) implies (refinement: (P5 && Z5) <= (P5 && Z5))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 253.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P5 && Z5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 248.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P5 && Z5) <= (P5 && Z5)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 398.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && K5)) implies (refinement: (K3 && K5) <= K3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 198.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && K5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 200.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && K5) <= K3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 557.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && Z2)) implies (refinement: (K3 && Z2) <= (K3 && Z2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 197.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 360.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && Z2) <= (K3 && Z2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 529.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C1 && C2)) implies (refinement: (C1 && C2) <= C1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 266.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C1 && C2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 263.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C1 && C2) <= C1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 476.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C2 && P4)) implies (refinement: (C2 && P4) <= C1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 223.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C2 && P4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 253.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C2 && P4) <= C1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 487.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P5 && Z5)) implies (refinement: (P5 && Z5) <= Z5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 255.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P5 && Z5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 232.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P5 && Z5) <= Z5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 457.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && P7)) implies (refinement: (K5 && P7) <= (K5 && P7))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 224.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 233.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && P7) <= (K5 && P7)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 450.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && Z2)) implies (refinement: (K3 && Z2) <= Z2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 229.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 221.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && Z2) <= Z2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 477.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C1 && C2)) implies (refinement: (C1 && C2) <= C2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 237.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C1 && C2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 240.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C1 && C2) <= C2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 480.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C2 && P4)) implies (refinement: (C2 && P4) <= C2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 258.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C2 && P4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 222.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C2 && P4) <= C2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 32.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "(consistency: (G && Q)) implies (refinement: (G && Q) <= (G && Q))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 13.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/AG",
      "query": "consistency: (G && Q)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 19.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/AG",
      "query": "refinement: (G && Q) <= (G && Q)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 428.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P5 && Z5)) implies (refinement: (P5 && Z5) <= P5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 213.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P5 && Z5)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 215.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P5 && Z5) <= P5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 42.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "(consistency: (G && Q)) implies (refinement: G <= (G && Q))",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 13.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/AG",
      "query": "consistency: (G && Q)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 29.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/AG",
      "query": "refinement: G <= (G && Q)",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 30.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "(consistency: (G && Q)) implies (refinement: Q <= (G && Q))",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 13.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/AG",
      "query": "consistency: (G && Q)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 17.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/AG",
      "query": "refinement: Q <= (G && Q)",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 48.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "(consistency: (G && Q)) implies (refinement: Imp <= (G && Q))",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 29.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/AG",
      "query": "consistency: (G && Q)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 19.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/AG",
      "query": "refinement: Imp <= (G && Q)",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 28.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "(consistency: (G && Q)) implies (refinement: (G && Q) <= G)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 14.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/AG",
      "query": "consistency: (G && Q)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 14.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/AG",
      "query": "refinement: (G && Q) <= G",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 28.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "(consistency: (G && Q)) implies (refinement: (G && Q) <= Q)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 13.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/AG",
      "query": "consistency: (G && Q)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 15.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/AG",
      "query": "refinement: (G && Q) <= Q",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 399.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && Z2)) implies (refinement: (K3 && Z2) <= K3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 203.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 196.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && Z2) <= K3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C2 && F2)) implies (refinement: (C2 && F2) <= (C2 && F2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 199.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C2 && F2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C2 && F2) <= (C2 && F2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 423.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (Z5 && Z7)) implies (refinement: (Z5 && Z7) <= (Z5 && Z7))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 189.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (Z5 && Z7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 234.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (Z5 && Z7) <= (Z5 && Z7)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 791.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && P7)) implies (refinement: (K5 && P7) <= P7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 377.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 414.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && P7) <= P7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 393.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (Z3 && Z4)) implies (refinement: (Z3 && Z4) <= (Z3 && Z4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 192.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (Z3 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 201.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (Z3 && Z4) <= (Z3 && Z4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 418.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P7 && Z2)) implies (refinement: (P7 && Z2) <= (P7 && Z2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 208.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P7 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 210.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P7 && Z2) <= (P7 && Z2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C2 && F2)) implies (refinement: (C2 && F2) <= C1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 229.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C2 && F2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C2 && F2) <= C1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 441.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && P7)) implies (refinement: (K5 && P7) <= K5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 223.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 218.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && P7) <= K5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 435.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (Z3 && Z4)) implies (refinement: Z3 <= (Z3 && Z4))",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 237.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (Z3 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 198.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: Z3 <= (Z3 && Z4)",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 477.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P7 && Z2)) implies (refinement: (P7 && Z2) <= P7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 272.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P7 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 205.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P7 && Z2) <= P7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C2 && F2)) implies (refinement: (C2 && F2) <= F2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 232.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C2 && F2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C2 && F2) <= F2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && Z3)) implies (refinement: (K5 && Z3) <= (K5 && Z3))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 218.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && Z3) <= (K5 && Z3)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 426.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (Z3 && Z4)) implies (refinement: (Z3 && Z4) <= Z3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 195.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (Z3 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 231.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (Z3 && Z4) <= Z3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 404.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P7 && Z2)) implies (refinement: (P7 && Z2) <= Z2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 178.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P7 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 226.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P7 && Z2) <= Z2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C2 && F2)) implies (refinement: (C2 && F2) <= C2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 220.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C2 && F2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C2 && F2) <= C2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && Z3)) implies (refinement: (K5 && Z3) <= K5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 212.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && Z3) <= K5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 458.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (Z3 && Z4)) implies (refinement: (Z3 && Z4) <= Z4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 239.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (Z3 && Z4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 219.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (Z3 && Z4) <= Z4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (Z2 && Z3)) implies (refinement: (Z2 && Z3) <= (Z2 && Z3))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 206.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (Z2 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (Z2 && Z3) <= (Z2 && Z3)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C2 && P3)) implies (refinement: (C2 && P3) <= (C2 && P3))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 226.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C2 && P3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C2 && P3) <= (C2 && P3)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && Z3)) implies (refinement: (K5 && Z3) <= Z3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 225.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && Z3) <= Z3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 390.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P6 && P7)) implies (refinement: (P6 && P7) <= (P6 && P7))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 192.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P6 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 198.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P6 && P7) <= (P6 && P7)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && Z3)) implies (refinement: (K5 && Z3) <= Z4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 169.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && Z3) <= Z4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C2 && P3)) implies (refinement: (C2 && P3) <= C1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 220.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C2 && P3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C2 && P3) <= C1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 382.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P6 && P7)) implies (refinement: P6 <= (P6 && P7))",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 193.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P6 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 189.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: P6 <= (P6 && P7)",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 363.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && P6)) implies (refinement: (K5 && P6) <= (K5 && P6))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 185.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 178.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && P6) <= (K5 && P6)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C2 && P3)) implies (refinement: (C2 && P3) <= C2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 199.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C2 && P3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C2 && P3) <= C2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 392.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P6 && P7)) implies (refinement: (P6 && P7) <= P7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 188.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P6 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 204.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P6 && P7) <= P7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 411.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && P6)) implies (refinement: (K5 && P6) <= P7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 220.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 191.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && P6) <= P7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (C2 && P3)) implies (refinement: (C2 && P3) <= P3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 210.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (C2 && P3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (C2 && P3) <= P3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 401.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P6 && P7)) implies (refinement: (P6 && P7) <= P6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 203.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P6 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 198.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P6 && P7) <= P6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 4817.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Spec \\\\ Administration)) implies (refinement: (Machine || Researcher) <= (Spec \\\\ Administration))",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 50.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Spec \\\\ Administration)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 4767.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Machine || Researcher) <= (Spec \\\\ Administration)",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 61.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/DelayAdd",
    "query": "(consistency: (B \\\\ A2)) implies (refinement: (B \\\\ A2) <= (B \\\\ A2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 26.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "consistency: (B \\\\ A2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 35.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "refinement: (B \\\\ A2) <= (B \\\\ A2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 419.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && P6)) implies (refinement: (K5 && P6) <= K5)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 210.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 209.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && P6) <= K5",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 67.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/DelayAdd",
    "query": "(consistency: (B \\\\ A1)) implies (refinement: (B \\\\ A1) <= (B \\\\ A1))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 28.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "consistency: (B \\\\ A1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 39.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/DelayAdd",
      "query": "refinement: (B \\\\ A1) <= (B \\\\ A1)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 420.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && K6)) implies (refinement: (K1 && K6) <= (K1 && K6))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 203.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && K6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 217.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && K6) <= (K1 && K6)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 363.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P0 && P1)) implies (refinement: (P0 && P1) <= (P0 && P1))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 189.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P0 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 174.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P0 && P1) <= (P0 && P1)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 320.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K5 && P6)) implies (refinement: (K5 && P6) <= P6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 191.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K5 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 129.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K5 && P6) <= P6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 367.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "(consistency: (Spec \\\\ Adm2)) implies (refinement: (Spec \\\\ Adm2) <= (Spec \\\\ Adm2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 54.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "consistency: (Spec \\\\ Adm2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 313.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/EcdarUniversity",
      "query": "refinement: (Spec \\\\ Adm2) <= (Spec \\\\ Adm2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 254.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P0 && P1)) implies (refinement: P0 <= (P0 && P1))",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 136.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P0 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 118.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: P0 <= (P0 && P1)",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 350.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && K6)) implies (refinement: (K1 && K6) <= K6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 181.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && K6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 169.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && K6) <= K6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 39.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: (Test12 && Test8)) implies (refinement: (Test12 && Test8) <= (Test12 && Test8))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 16.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: (Test12 && Test8)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 23.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: (Test12 && Test8) <= (Test12 && Test8)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 47.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: (Test12 && Test8)) implies (refinement: (Test12 && Test8) <= Test8)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 28.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: (Test12 && Test8)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 19.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: (Test12 && Test8) <= Test8",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 34.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/Conjunction",
    "query": "(consistency: (Test12 && Test8)) implies (refinement: (Test12 && Test8) <= Test12)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 18.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "consistency: (Test12 && Test8)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 16.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/json/Conjunction",
      "query": "refinement: (Test12 && Test8) <= Test12",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 332.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P0 && P1)) implies (refinement: (P0 && P1) <= P0)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 173.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P0 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 159.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P0 && P1) <= P0",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 353.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K1 && K6)) implies (refinement: (K1 && K6) <= K1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 170.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K1 && K6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 183.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K1 && K6) <= K1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 330.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L4 && Z2)) implies (refinement: (L4 && Z2) <= (L4 && Z2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 142.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L4 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 188.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L4 && Z2) <= (L4 && Z2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 284.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && K6)) implies (refinement: (K3 && K6) <= (K3 && K6))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 172.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && K6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 112.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && K6) <= (K3 && K6)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 320.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (P0 && P1)) implies (refinement: (P0 && P1) <= P1)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 178.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (P0 && P1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 142.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (P0 && P1) <= P1",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 269.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L4 && Z2)) implies (refinement: (L4 && Z2) <= L4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 143.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L4 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 126.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L4 && Z2) <= L4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 283.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && K6)) implies (refinement: (K3 && K6) <= K6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 120.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && K6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 163.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && K6) <= K6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 261.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L4 && Z2)) implies (refinement: (L4 && Z2) <= Z2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 132.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L4 && Z2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 129.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L4 && Z2) <= Z2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 327.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L3 \\\\ L1)) implies (refinement: (L3 \\\\ L1) <= (L3 \\\\ L1))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 165.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L3 \\\\ L1)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 162.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L3 \\\\ L1) <= (L3 \\\\ L1)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 283.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && L4)) implies (refinement: (K2 && L4) <= (K2 && L4))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 135.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && L4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 148.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && L4) <= (K2 && L4)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 286.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (L3 \\\\ L2)) implies (refinement: (L3 \\\\ L2) <= (L3 \\\\ L2))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 128.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (L3 \\\\ L2)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 158.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (L3 \\\\ L2) <= (L3 \\\\ L2)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 402.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K3 && K6)) implies (refinement: (K3 && K6) <= K3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 219.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K3 && K6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 183.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K3 && K6) <= K3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 240.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && L4)) implies (refinement: (K2 && L4) <= L4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 114.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && L4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 126.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && L4) <= L4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 267.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && P7)) implies (refinement: (K6 && P7) <= (K6 && P7))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 153.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 114.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && P7) <= (K6 && P7)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 257.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K2 && L4)) implies (refinement: (K2 && L4) <= K2)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 121.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K2 && L4)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 136.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K2 && L4) <= K2",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 281.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && P7)) implies (refinement: (K6 && P7) <= P7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 161.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 120.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && P7) <= P7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 249.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && P7)) implies (refinement: (K6 && P7) <= K6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 121.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && P7)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 128.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && P7) <= K6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && Z3)) implies (refinement: (K6 && Z3) <= (K6 && Z3))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 172.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && Z3) <= (K6 && Z3)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && Z3)) implies (refinement: (K6 && Z3) <= Z3)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 248.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && Z3) <= Z3",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && Z3)) implies (refinement: (K6 && Z3) <= K6)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 161.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && Z3) <= K6",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": null,
  "result": "NON_EXCEPTION",
  "expected": "NON_EXCEPTION",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && Z3)) implies (refinement: (K6 && Z3) <= Z4)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 172.0,
    "result": "UNSATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && Z3)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": null,
    "result": "EXCEPTION",
    "expected": "NON_EXCEPTION",
    "exception": "io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Creation of query failed: Conjunction is empty after pruning",
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && Z3) <= Z4",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 505.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && P6)) implies (refinement: (K6 && P6) <= (K6 && P6))",
    "testSuite": "ImpliedSelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 208.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 297.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && P6) <= (K6 && P6)",
      "testSuite": "ImpliedSelfRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 429.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/xml/delayRefinement.xml",
    "query": "(consistency: (K6 && P6)) implies (refinement: (K6 && P6) <= P7)",
    "testSuite": "ImpliedRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": [{
    "time": 217.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "consistency: (K6 && P6)",
      "testSuite": "ImpliedRefinement::Precondition",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }, {
    "time": 212.0,
    "result": "SATISFIED",
    "expected": "SATISFIED",
    "exception": null,
    "test": {
      "projectPath": "samples/xml/delayRefinement.xml",
      "query": "refinement: (K6 && P6) <= P7",
      "testSuite": "ImpliedRefinement",
      "type": "SatisfiedTest"
    },
    "_inner": []
  }]
}, {
  "time": 15689.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: (Machine || Researcher) <= (Spec \\\\ Adm2)",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 8552.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: (Adm2 || Machine) <= (Spec \\\\ Researcher)",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 14040.0,
  "result": "UNSATISFIED",
  "expected": "UNSATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/EcdarUniversity",
    "query": "refinement: (Adm2 || Researcher) <= (Spec \\\\ Machine)",
    "testSuite": "NotRefines",
    "type": "NotSatisfiedTest"
  },
  "_inner": []
}, {
  "time": 10.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "refinement: A <= A",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 10.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "refinement: G <= G",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 10.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "refinement: G <= Q",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 11.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "refinement: Q <= G",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 10.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "refinement: Q <= Q",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 11.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "refinement: Imp <= G",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 11.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "refinement: Imp <= Q",
    "testSuite": "Refinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}, {
  "time": 11.0,
  "result": "SATISFIED",
  "expected": "SATISFIED",
  "exception": null,
  "test": {
    "projectPath": "samples/json/AG",
    "query": "refinement: Imp <= Imp",
    "testSuite": "SelfRefinement",
    "type": "SatisfiedTest"
  },
  "_inner": []
}]